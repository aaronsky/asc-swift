// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect

public struct GameCenterActivityVersion: Codable, Equatable, Identifiable, Sendable {
    public var type: `Type`
    public var id: String
    public var attributes: Attributes?
    public var relationships: Relationships?
    public var links: ResourceLinks?

    public enum `Type`: String, CaseIterable, Codable, Sendable {
        case gameCenterActivityVersions
    }

    public struct Attributes: Codable, Equatable, Sendable {
        public var version: Int?
        public var state: GameCenterVersionState?
        public var fallbackURL: String?

        public init(version: Int? = nil, state: GameCenterVersionState? = nil, fallbackURL: String? = nil) {
            self.version = version
            self.state = state
            self.fallbackURL = fallbackURL
        }

        private enum CodingKeys: String, CodingKey {
            case version
            case state
            case fallbackURL = "fallbackUrl"
        }
    }

    public struct Relationships: Codable, Equatable, Sendable {
        public var activity: Activity?
        public var localizations: Localizations?
        public var defaultImage: DefaultImage?
        public var releases: Releases?

        public struct Activity: Codable, Equatable, Sendable {
            public var data: Data?

            public struct Data: Codable, Equatable, Identifiable, Sendable {
                public var type: `Type`
                public var id: String

                public enum `Type`: String, CaseIterable, Codable, Sendable {
                    case gameCenterActivities
                }

                public init(type: `Type` = .gameCenterActivities, id: String) {
                    self.type = type
                    self.id = id
                }
            }

            public init(data: Data? = nil) {
                self.data = data
            }
        }

        public struct Localizations: Codable, Equatable, Sendable {
            public var links: RelationshipLinks?
            public var meta: PagingInformation?
            public var data: [Datum]?

            public struct Datum: Codable, Equatable, Identifiable, Sendable {
                public var type: `Type`
                public var id: String

                public enum `Type`: String, CaseIterable, Codable, Sendable {
                    case gameCenterActivityLocalizations
                }

                public init(type: `Type` = .gameCenterActivityLocalizations, id: String) {
                    self.type = type
                    self.id = id
                }
            }

            public init(links: RelationshipLinks? = nil, meta: PagingInformation? = nil, data: [Datum]? = nil) {
                self.links = links
                self.meta = meta
                self.data = data
            }
        }

        public struct DefaultImage: Codable, Equatable, Sendable {
            public var links: RelationshipLinks?
            public var data: Data?

            public struct Data: Codable, Equatable, Identifiable, Sendable {
                public var type: `Type`
                public var id: String

                public enum `Type`: String, CaseIterable, Codable, Sendable {
                    case gameCenterActivityImages
                }

                public init(type: `Type` = .gameCenterActivityImages, id: String) {
                    self.type = type
                    self.id = id
                }
            }

            public init(links: RelationshipLinks? = nil, data: Data? = nil) {
                self.links = links
                self.data = data
            }
        }

        public struct Releases: Codable, Equatable, Sendable {
            public var meta: PagingInformation?
            public var data: [Datum]?

            public struct Datum: Codable, Equatable, Identifiable, Sendable {
                public var type: `Type`
                public var id: String

                public enum `Type`: String, CaseIterable, Codable, Sendable {
                    case gameCenterActivityVersionReleases
                }

                public init(type: `Type` = .gameCenterActivityVersionReleases, id: String) {
                    self.type = type
                    self.id = id
                }
            }

            public init(meta: PagingInformation? = nil, data: [Datum]? = nil) {
                self.meta = meta
                self.data = data
            }
        }

        public init(activity: Activity? = nil, localizations: Localizations? = nil, defaultImage: DefaultImage? = nil, releases: Releases? = nil) {
            self.activity = activity
            self.localizations = localizations
            self.defaultImage = defaultImage
            self.releases = releases
        }
    }

    public init(type: `Type` = .gameCenterActivityVersions, id: String, attributes: Attributes? = nil, relationships: Relationships? = nil, links: ResourceLinks? = nil) {
        self.type = type
        self.id = id
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }
}
