// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect

public struct AgeRatingDeclarationUpdateRequest: Codable, Equatable, Sendable {
    public var data: Data

    public struct Data: Codable, Equatable, Identifiable, Sendable {
        public var type: `Type`
        public var id: String
        public var attributes: Attributes?

        public enum `Type`: String, CaseIterable, Codable, Sendable {
            case ageRatingDeclarations
        }

        public struct Attributes: Codable, Equatable, Sendable {
            public var alcoholTobaccoOrDrugUseOrReferences: AlcoholTobaccoOrDrugUseOrReferences?
            public var contests: Contests?
            public var isGamblingAndContests: Bool?
            public var isGambling: Bool?
            public var gamblingSimulated: GamblingSimulated?
            public var kidsAgeBand: KidsAgeBand?
            public var isLootBox: Bool?
            public var medicalOrTreatmentInformation: MedicalOrTreatmentInformation?
            public var profanityOrCrudeHumor: ProfanityOrCrudeHumor?
            public var sexualContentGraphicAndNudity: SexualContentGraphicAndNudity?
            public var sexualContentOrNudity: SexualContentOrNudity?
            public var horrorOrFearThemes: HorrorOrFearThemes?
            public var matureOrSuggestiveThemes: MatureOrSuggestiveThemes?
            public var isUnrestrictedWebAccess: Bool?
            public var violenceCartoonOrFantasy: ViolenceCartoonOrFantasy?
            public var violenceRealisticProlongedGraphicOrSadistic: ViolenceRealisticProlongedGraphicOrSadistic?
            public var violenceRealistic: ViolenceRealistic?
            public var ageRatingOverride: AgeRatingOverride?
            public var koreaAgeRatingOverride: KoreaAgeRatingOverride?
            public var isSeventeenPlus: Bool?

            public enum AlcoholTobaccoOrDrugUseOrReferences: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum Contests: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum GamblingSimulated: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum MedicalOrTreatmentInformation: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum ProfanityOrCrudeHumor: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum SexualContentGraphicAndNudity: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum SexualContentOrNudity: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum HorrorOrFearThemes: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum MatureOrSuggestiveThemes: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum ViolenceCartoonOrFantasy: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum ViolenceRealisticProlongedGraphicOrSadistic: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum ViolenceRealistic: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case infrequentOrMild = "INFREQUENT_OR_MILD"
                case frequentOrIntense = "FREQUENT_OR_INTENSE"
            }

            public enum AgeRatingOverride: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case seventeenPlus = "SEVENTEEN_PLUS"
                case unrated = "UNRATED"
            }

            public enum KoreaAgeRatingOverride: String, CaseIterable, Codable, Sendable {
                case `none` = "NONE"
                case fifteenPlus = "FIFTEEN_PLUS"
                case nineteenPlus = "NINETEEN_PLUS"
            }

            public init(alcoholTobaccoOrDrugUseOrReferences: AlcoholTobaccoOrDrugUseOrReferences? = nil, contests: Contests? = nil, isGamblingAndContests: Bool? = nil, isGambling: Bool? = nil, gamblingSimulated: GamblingSimulated? = nil, kidsAgeBand: KidsAgeBand? = nil, isLootBox: Bool? = nil, medicalOrTreatmentInformation: MedicalOrTreatmentInformation? = nil, profanityOrCrudeHumor: ProfanityOrCrudeHumor? = nil, sexualContentGraphicAndNudity: SexualContentGraphicAndNudity? = nil, sexualContentOrNudity: SexualContentOrNudity? = nil, horrorOrFearThemes: HorrorOrFearThemes? = nil, matureOrSuggestiveThemes: MatureOrSuggestiveThemes? = nil, isUnrestrictedWebAccess: Bool? = nil, violenceCartoonOrFantasy: ViolenceCartoonOrFantasy? = nil, violenceRealisticProlongedGraphicOrSadistic: ViolenceRealisticProlongedGraphicOrSadistic? = nil, violenceRealistic: ViolenceRealistic? = nil, ageRatingOverride: AgeRatingOverride? = nil, koreaAgeRatingOverride: KoreaAgeRatingOverride? = nil, isSeventeenPlus: Bool? = nil) {
                self.alcoholTobaccoOrDrugUseOrReferences = alcoholTobaccoOrDrugUseOrReferences
                self.contests = contests
                self.isGamblingAndContests = isGamblingAndContests
                self.isGambling = isGambling
                self.gamblingSimulated = gamblingSimulated
                self.kidsAgeBand = kidsAgeBand
                self.isLootBox = isLootBox
                self.medicalOrTreatmentInformation = medicalOrTreatmentInformation
                self.profanityOrCrudeHumor = profanityOrCrudeHumor
                self.sexualContentGraphicAndNudity = sexualContentGraphicAndNudity
                self.sexualContentOrNudity = sexualContentOrNudity
                self.horrorOrFearThemes = horrorOrFearThemes
                self.matureOrSuggestiveThemes = matureOrSuggestiveThemes
                self.isUnrestrictedWebAccess = isUnrestrictedWebAccess
                self.violenceCartoonOrFantasy = violenceCartoonOrFantasy
                self.violenceRealisticProlongedGraphicOrSadistic = violenceRealisticProlongedGraphicOrSadistic
                self.violenceRealistic = violenceRealistic
                self.ageRatingOverride = ageRatingOverride
                self.koreaAgeRatingOverride = koreaAgeRatingOverride
                self.isSeventeenPlus = isSeventeenPlus
            }

            private enum CodingKeys: String, CodingKey {
                case alcoholTobaccoOrDrugUseOrReferences
                case contests
                case isGamblingAndContests = "gamblingAndContests"
                case isGambling = "gambling"
                case gamblingSimulated
                case kidsAgeBand
                case isLootBox = "lootBox"
                case medicalOrTreatmentInformation
                case profanityOrCrudeHumor
                case sexualContentGraphicAndNudity
                case sexualContentOrNudity
                case horrorOrFearThemes
                case matureOrSuggestiveThemes
                case isUnrestrictedWebAccess = "unrestrictedWebAccess"
                case violenceCartoonOrFantasy
                case violenceRealisticProlongedGraphicOrSadistic
                case violenceRealistic
                case ageRatingOverride
                case koreaAgeRatingOverride
                case isSeventeenPlus = "seventeenPlus"
            }
        }

        public init(type: `Type` = .ageRatingDeclarations, id: String, attributes: Attributes? = nil) {
            self.type = type
            self.id = id
            self.attributes = attributes
        }
    }

    public init(data: Data) {
        self.data = data
    }
}
