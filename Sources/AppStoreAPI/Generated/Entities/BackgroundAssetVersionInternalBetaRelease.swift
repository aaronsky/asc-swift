// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect

public struct BackgroundAssetVersionInternalBetaRelease: Codable, Equatable, Identifiable, Sendable {
    public var type: `Type`
    public var id: String
    public var attributes: Attributes?
    public var relationships: Relationships?
    public var links: ResourceLinks?

    public enum `Type`: String, CaseIterable, Codable, Sendable {
        case backgroundAssetVersionInternalBetaReleases
    }

    public struct Attributes: Codable, Equatable, Sendable {
        public var state: State?

        public enum State: String, CaseIterable, Codable, Sendable {
            case readyForTesting = "READY_FOR_TESTING"
            case superseded = "SUPERSEDED"
        }

        public init(state: State? = nil) {
            self.state = state
        }
    }

    public struct Relationships: Codable, Equatable, Sendable {
        public var backgroundAssetVersion: BackgroundAssetVersion?

        public struct BackgroundAssetVersion: Codable, Equatable, Sendable {
            public var data: Data?

            public struct Data: Codable, Equatable, Identifiable, Sendable {
                public var type: `Type`
                public var id: String

                public enum `Type`: String, CaseIterable, Codable, Sendable {
                    case backgroundAssetVersions
                }

                public init(type: `Type` = .backgroundAssetVersions, id: String) {
                    self.type = type
                    self.id = id
                }
            }

            public init(data: Data? = nil) {
                self.data = data
            }
        }

        public init(backgroundAssetVersion: BackgroundAssetVersion? = nil) {
            self.backgroundAssetVersion = backgroundAssetVersion
        }
    }

    public init(type: `Type` = .backgroundAssetVersionInternalBetaReleases, id: String, attributes: Attributes? = nil, relationships: Relationships? = nil, links: ResourceLinks? = nil) {
        self.type = type
        self.id = id
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }
}
