// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect

public struct GameCenterChallengeCreateRequest: Codable, Equatable, Sendable {
    public var data: Data

    public struct Data: Codable, Equatable, Sendable {
        public var type: `Type`
        public var attributes: Attributes
        public var relationships: Relationships?

        public enum `Type`: String, CaseIterable, Codable, Sendable {
            case gameCenterChallenges
        }

        public struct Attributes: Codable, Equatable, Sendable {
            public var referenceName: String
            public var vendorIdentifier: String
            public var allowedDurations: [AllowedDuration]?
            public var challengeType: ChallengeType
            public var isRepeatable: Bool?

            public enum AllowedDuration: String, CaseIterable, Codable, Sendable {
                case oneDay = "ONE_DAY"
                case threeDays = "THREE_DAYS"
                case oneWeek = "ONE_WEEK"
            }

            public enum ChallengeType: String, CaseIterable, Codable, Sendable {
                case leaderboard = "LEADERBOARD"
            }

            public init(referenceName: String, vendorIdentifier: String, allowedDurations: [AllowedDuration]? = nil, challengeType: ChallengeType = .leaderboard, isRepeatable: Bool? = nil) {
                self.referenceName = referenceName
                self.vendorIdentifier = vendorIdentifier
                self.allowedDurations = allowedDurations
                self.challengeType = challengeType
                self.isRepeatable = isRepeatable
            }

            private enum CodingKeys: String, CodingKey {
                case referenceName
                case vendorIdentifier
                case allowedDurations
                case challengeType
                case isRepeatable = "repeatable"
            }
        }

        public struct Relationships: Codable, Equatable, Sendable {
            public var gameCenterDetail: GameCenterDetail?
            public var gameCenterGroup: GameCenterGroup?
            public var leaderboard: Leaderboard?

            public struct GameCenterDetail: Codable, Equatable, Sendable {
                public var data: Data?

                public struct Data: Codable, Equatable, Identifiable, Sendable {
                    public var type: `Type`
                    public var id: String

                    public enum `Type`: String, CaseIterable, Codable, Sendable {
                        case gameCenterDetails
                    }

                    public init(type: `Type` = .gameCenterDetails, id: String) {
                        self.type = type
                        self.id = id
                    }
                }

                public init(data: Data? = nil) {
                    self.data = data
                }
            }

            public struct GameCenterGroup: Codable, Equatable, Sendable {
                public var data: Data?

                public struct Data: Codable, Equatable, Identifiable, Sendable {
                    public var type: `Type`
                    public var id: String

                    public enum `Type`: String, CaseIterable, Codable, Sendable {
                        case gameCenterGroups
                    }

                    public init(type: `Type` = .gameCenterGroups, id: String) {
                        self.type = type
                        self.id = id
                    }
                }

                public init(data: Data? = nil) {
                    self.data = data
                }
            }

            public struct Leaderboard: Codable, Equatable, Sendable {
                public var data: Data?

                public struct Data: Codable, Equatable, Identifiable, Sendable {
                    public var type: `Type`
                    public var id: String

                    public enum `Type`: String, CaseIterable, Codable, Sendable {
                        case gameCenterLeaderboards
                    }

                    public init(type: `Type` = .gameCenterLeaderboards, id: String) {
                        self.type = type
                        self.id = id
                    }
                }

                public init(data: Data? = nil) {
                    self.data = data
                }
            }

            public init(gameCenterDetail: GameCenterDetail? = nil, gameCenterGroup: GameCenterGroup? = nil, leaderboard: Leaderboard? = nil) {
                self.gameCenterDetail = gameCenterDetail
                self.gameCenterGroup = gameCenterGroup
                self.leaderboard = leaderboard
            }
        }

        public init(type: `Type` = .gameCenterChallenges, attributes: Attributes, relationships: Relationships? = nil) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }
    }

    public init(data: Data) {
        self.data = data
    }
}
