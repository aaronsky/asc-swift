// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect

public struct GameCenterLeaderboardSetRelease: Codable, Equatable, Identifiable, Sendable {
    public var type: `Type`
    public var id: String
    public var attributes: Attributes?
    public var relationships: Relationships?
    public var links: ResourceLinks?

    public enum `Type`: String, CaseIterable, Codable, Sendable {
        case gameCenterLeaderboardSetReleases
    }

    public struct Attributes: Codable, Equatable, Sendable {
        public var isLive: Bool?

        public init(isLive: Bool? = nil) {
            self.isLive = isLive
        }

        private enum CodingKeys: String, CodingKey {
            case isLive = "live"
        }
    }

    public struct Relationships: Codable, Equatable, Sendable {
        public var gameCenterDetail: GameCenterDetail?
        public var gameCenterLeaderboardSet: GameCenterLeaderboardSet?

        public struct GameCenterDetail: Codable, Equatable, Sendable {
            public var data: Data?

            public struct Data: Codable, Equatable, Identifiable, Sendable {
                public var type: `Type`
                public var id: String

                public enum `Type`: String, CaseIterable, Codable, Sendable {
                    case gameCenterDetails
                }

                public init(type: `Type` = .gameCenterDetails, id: String) {
                    self.type = type
                    self.id = id
                }
            }

            public init(data: Data? = nil) {
                self.data = data
            }
        }

        public struct GameCenterLeaderboardSet: Codable, Equatable, Sendable {
            public var data: Data?

            public struct Data: Codable, Equatable, Identifiable, Sendable {
                public var type: `Type`
                public var id: String

                public enum `Type`: String, CaseIterable, Codable, Sendable {
                    case gameCenterLeaderboardSets
                }

                public init(type: `Type` = .gameCenterLeaderboardSets, id: String) {
                    self.type = type
                    self.id = id
                }
            }

            public init(data: Data? = nil) {
                self.data = data
            }
        }

        public init(gameCenterDetail: GameCenterDetail? = nil, gameCenterLeaderboardSet: GameCenterLeaderboardSet? = nil) {
            self.gameCenterDetail = gameCenterDetail
            self.gameCenterLeaderboardSet = gameCenterLeaderboardSet
        }
    }

    public init(type: `Type` = .gameCenterLeaderboardSetReleases, id: String, attributes: Attributes? = nil, relationships: Relationships? = nil, links: ResourceLinks? = nil) {
        self.type = type
        self.id = id
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }
}
