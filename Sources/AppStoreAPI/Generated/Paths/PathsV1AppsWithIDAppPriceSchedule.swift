// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.Apps.WithID {
    public var appPriceSchedule: AppPriceSchedule {
        AppPriceSchedule(path: path + "/appPriceSchedule")
    }

    public struct AppPriceSchedule {
        /// Path: `/v1/apps/{id}/appPriceSchedule`
        public let path: String

        public func get(fieldsAppPriceSchedules: [FieldsAppPriceSchedules]? = nil, fieldsApps: [FieldsApps]? = nil, fieldsTerritories: [FieldsTerritories]? = nil, fieldsAppPrices: [FieldsAppPrices]? = nil, include: [Include]? = nil, limitManualPrices: Int? = nil, limitAutomaticPrices: Int? = nil) -> Request<AppStoreAPI.AppPriceScheduleResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsAppPriceSchedules, fieldsApps, fieldsTerritories, fieldsAppPrices, include, limitManualPrices, limitAutomaticPrices), id: "apps_appPriceSchedule_getToOneRelated")
        }

        private func makeGetQuery(_ fieldsAppPriceSchedules: [FieldsAppPriceSchedules]?, _ fieldsApps: [FieldsApps]?, _ fieldsTerritories: [FieldsTerritories]?, _ fieldsAppPrices: [FieldsAppPrices]?, _ include: [Include]?, _ limitManualPrices: Int?, _ limitAutomaticPrices: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsAppPriceSchedules, forKey: "fields[appPriceSchedules]")
            encoder.encode(fieldsApps, forKey: "fields[apps]")
            encoder.encode(fieldsTerritories, forKey: "fields[territories]")
            encoder.encode(fieldsAppPrices, forKey: "fields[appPrices]")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitManualPrices, forKey: "limit[manualPrices]")
            encoder.encode(limitAutomaticPrices, forKey: "limit[automaticPrices]")
            return encoder.items
        }

        public enum FieldsAppPriceSchedules: String, CaseIterable, Codable, Sendable {
            case app
            case baseTerritory
            case manualPrices
            case automaticPrices
        }

        public enum FieldsApps: String, CaseIterable, Codable, Sendable {
            case accessibilityURL = "accessibilityUrl"
            case name
            case bundleID = "bundleId"
            case sku
            case primaryLocale
            case isOrEverWasMadeForKids
            case subscriptionStatusURL = "subscriptionStatusUrl"
            case subscriptionStatusURLVersion = "subscriptionStatusUrlVersion"
            case subscriptionStatusURLForSandbox = "subscriptionStatusUrlForSandbox"
            case subscriptionStatusURLVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
            case contentRightsDeclaration
            case streamlinedPurchasingEnabled
            case accessibilityDeclarations
            case appEncryptionDeclarations
            case ciProduct
            case betaTesters
            case betaGroups
            case appStoreVersions
            case preReleaseVersions
            case betaAppLocalizations
            case builds
            case betaLicenseAgreement
            case betaAppReviewDetail
            case appInfos
            case appClips
            case appPricePoints
            case endUserLicenseAgreement
            case appPriceSchedule
            case appAvailabilityV2
            case inAppPurchases
            case subscriptionGroups
            case gameCenterEnabledVersions
            case perfPowerMetrics
            case appCustomProductPages
            case inAppPurchasesV2
            case promotedPurchases
            case appEvents
            case reviewSubmissions
            case subscriptionGracePeriod
            case customerReviews
            case customerReviewSummarizations
            case gameCenterDetail
            case appStoreVersionExperimentsV2
            case alternativeDistributionKey
            case analyticsReportRequests
            case marketplaceSearchDetail
            case backgroundAssets
            case betaFeedbackScreenshotSubmissions
            case betaFeedbackCrashSubmissions
            case webhooks
        }

        public enum FieldsTerritories: String, CaseIterable, Codable, Sendable {
            case currency
        }

        public enum FieldsAppPrices: String, CaseIterable, Codable, Sendable {
            case manual
            case startDate
            case endDate
            case appPricePoint
            case territory
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case app
            case baseTerritory
            case manualPrices
            case automaticPrices
        }
    }
}
