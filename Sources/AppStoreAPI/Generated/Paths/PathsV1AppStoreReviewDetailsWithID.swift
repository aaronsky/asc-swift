// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.AppStoreReviewDetails {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v1/appStoreReviewDetails/{id}`
        public let path: String

        public func get(fieldsAppStoreReviewDetails: [FieldsAppStoreReviewDetails]? = nil, fieldsAppStoreReviewAttachments: [FieldsAppStoreReviewAttachments]? = nil, include: [Include]? = nil, limitAppStoreReviewAttachments: Int? = nil) -> Request<AppStoreAPI.AppStoreReviewDetailResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsAppStoreReviewDetails, fieldsAppStoreReviewAttachments, include, limitAppStoreReviewAttachments), id: "appStoreReviewDetails_getInstance")
        }

        private func makeGetQuery(_ fieldsAppStoreReviewDetails: [FieldsAppStoreReviewDetails]?, _ fieldsAppStoreReviewAttachments: [FieldsAppStoreReviewAttachments]?, _ include: [Include]?, _ limitAppStoreReviewAttachments: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsAppStoreReviewDetails, forKey: "fields[appStoreReviewDetails]")
            encoder.encode(fieldsAppStoreReviewAttachments, forKey: "fields[appStoreReviewAttachments]")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitAppStoreReviewAttachments, forKey: "limit[appStoreReviewAttachments]")
            return encoder.items
        }

        public enum FieldsAppStoreReviewDetails: String, CaseIterable, Codable, Sendable {
            case contactFirstName
            case contactLastName
            case contactPhone
            case contactEmail
            case demoAccountName
            case demoAccountPassword
            case demoAccountRequired
            case notes
            case appStoreVersion
            case appStoreReviewAttachments
        }

        public enum FieldsAppStoreReviewAttachments: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case sourceFileChecksum
            case uploadOperations
            case assetDeliveryState
            case appStoreReviewDetail
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case appStoreVersion
            case appStoreReviewAttachments
        }

        public func patch(_ body: AppStoreAPI.AppStoreReviewDetailUpdateRequest) -> Request<AppStoreAPI.AppStoreReviewDetailResponse> {
            Request(path: path, method: "PATCH", body: body, id: "appStoreReviewDetails_updateInstance")
        }
    }
}
