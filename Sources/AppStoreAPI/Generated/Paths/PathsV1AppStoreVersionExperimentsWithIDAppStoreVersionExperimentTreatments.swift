// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.AppStoreVersionExperiments.WithID {
    public var appStoreVersionExperimentTreatments: AppStoreVersionExperimentTreatments {
        AppStoreVersionExperimentTreatments(path: path + "/appStoreVersionExperimentTreatments")
    }

    public struct AppStoreVersionExperimentTreatments {
        /// Path: `/v1/appStoreVersionExperiments/{id}/appStoreVersionExperimentTreatments`
        public let path: String

        public func get(fieldsAppStoreVersionExperimentTreatments: [FieldsAppStoreVersionExperimentTreatments]? = nil, fieldsAppStoreVersionExperiments: [FieldsAppStoreVersionExperiments]? = nil, fieldsAppStoreVersionExperimentTreatmentLocalizations: [FieldsAppStoreVersionExperimentTreatmentLocalizations]? = nil, limit: Int? = nil, include: [Include]? = nil, limitAppStoreVersionExperimentTreatmentLocalizations: Int? = nil) -> Request<AppStoreAPI.AppStoreVersionExperimentTreatmentsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsAppStoreVersionExperimentTreatments, fieldsAppStoreVersionExperiments, fieldsAppStoreVersionExperimentTreatmentLocalizations, limit, include, limitAppStoreVersionExperimentTreatmentLocalizations), id: "appStoreVersionExperiments_appStoreVersionExperimentTreatments_getToManyRelated")
        }

        private func makeGetQuery(_ fieldsAppStoreVersionExperimentTreatments: [FieldsAppStoreVersionExperimentTreatments]?, _ fieldsAppStoreVersionExperiments: [FieldsAppStoreVersionExperiments]?, _ fieldsAppStoreVersionExperimentTreatmentLocalizations: [FieldsAppStoreVersionExperimentTreatmentLocalizations]?, _ limit: Int?, _ include: [Include]?, _ limitAppStoreVersionExperimentTreatmentLocalizations: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsAppStoreVersionExperimentTreatments, forKey: "fields[appStoreVersionExperimentTreatments]")
            encoder.encode(fieldsAppStoreVersionExperiments, forKey: "fields[appStoreVersionExperiments]")
            encoder.encode(fieldsAppStoreVersionExperimentTreatmentLocalizations, forKey: "fields[appStoreVersionExperimentTreatmentLocalizations]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitAppStoreVersionExperimentTreatmentLocalizations, forKey: "limit[appStoreVersionExperimentTreatmentLocalizations]")
            return encoder.items
        }

        public enum FieldsAppStoreVersionExperimentTreatments: String, CaseIterable, Codable, Sendable {
            case name
            case appIcon
            case appIconName
            case promotedDate
            case appStoreVersionExperiment
            case appStoreVersionExperimentV2
            case appStoreVersionExperimentTreatmentLocalizations
        }

        public enum FieldsAppStoreVersionExperiments: String, CaseIterable, Codable, Sendable {
            case name
            case trafficProportion
            case state
            case reviewRequired
            case startDate
            case endDate
            case appStoreVersion
            case appStoreVersionExperimentTreatments
            case platform
            case app
            case latestControlVersion
            case controlVersions
        }

        public enum FieldsAppStoreVersionExperimentTreatmentLocalizations: String, CaseIterable, Codable, Sendable {
            case locale
            case appStoreVersionExperimentTreatment
            case appScreenshotSets
            case appPreviewSets
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case appStoreVersionExperiment
            case appStoreVersionExperimentV2
            case appStoreVersionExperimentTreatmentLocalizations
        }
    }
}
