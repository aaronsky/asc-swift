// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V2.InAppPurchases {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v2/inAppPurchases/{id}`
        public let path: String

        public func get(fieldsInAppPurchases: [FieldsInAppPurchases]? = nil, fieldsInAppPurchaseLocalizations: [FieldsInAppPurchaseLocalizations]? = nil, fieldsInAppPurchasePricePoints: [FieldsInAppPurchasePricePoints]? = nil, fieldsInAppPurchaseContents: [FieldsInAppPurchaseContents]? = nil, fieldsInAppPurchaseAppStoreReviewScreenshots: [FieldsInAppPurchaseAppStoreReviewScreenshots]? = nil, fieldsPromotedPurchases: [FieldsPromotedPurchases]? = nil, fieldsInAppPurchasePriceSchedules: [FieldsInAppPurchasePriceSchedules]? = nil, fieldsInAppPurchaseAvailabilities: [FieldsInAppPurchaseAvailabilities]? = nil, fieldsInAppPurchaseImages: [FieldsInAppPurchaseImages]? = nil, include: [Include]? = nil, limitImages: Int? = nil, limitInAppPurchaseLocalizations: Int? = nil, limitPricePoints: Int? = nil) -> Request<AppStoreAPI.InAppPurchaseV2Response> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsInAppPurchases, fieldsInAppPurchaseLocalizations, fieldsInAppPurchasePricePoints, fieldsInAppPurchaseContents, fieldsInAppPurchaseAppStoreReviewScreenshots, fieldsPromotedPurchases, fieldsInAppPurchasePriceSchedules, fieldsInAppPurchaseAvailabilities, fieldsInAppPurchaseImages, include, limitImages, limitInAppPurchaseLocalizations, limitPricePoints), id: "inAppPurchasesV2_getInstance")
        }

        private func makeGetQuery(_ fieldsInAppPurchases: [FieldsInAppPurchases]?, _ fieldsInAppPurchaseLocalizations: [FieldsInAppPurchaseLocalizations]?, _ fieldsInAppPurchasePricePoints: [FieldsInAppPurchasePricePoints]?, _ fieldsInAppPurchaseContents: [FieldsInAppPurchaseContents]?, _ fieldsInAppPurchaseAppStoreReviewScreenshots: [FieldsInAppPurchaseAppStoreReviewScreenshots]?, _ fieldsPromotedPurchases: [FieldsPromotedPurchases]?, _ fieldsInAppPurchasePriceSchedules: [FieldsInAppPurchasePriceSchedules]?, _ fieldsInAppPurchaseAvailabilities: [FieldsInAppPurchaseAvailabilities]?, _ fieldsInAppPurchaseImages: [FieldsInAppPurchaseImages]?, _ include: [Include]?, _ limitImages: Int?, _ limitInAppPurchaseLocalizations: Int?, _ limitPricePoints: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsInAppPurchases, forKey: "fields[inAppPurchases]")
            encoder.encode(fieldsInAppPurchaseLocalizations, forKey: "fields[inAppPurchaseLocalizations]")
            encoder.encode(fieldsInAppPurchasePricePoints, forKey: "fields[inAppPurchasePricePoints]")
            encoder.encode(fieldsInAppPurchaseContents, forKey: "fields[inAppPurchaseContents]")
            encoder.encode(fieldsInAppPurchaseAppStoreReviewScreenshots, forKey: "fields[inAppPurchaseAppStoreReviewScreenshots]")
            encoder.encode(fieldsPromotedPurchases, forKey: "fields[promotedPurchases]")
            encoder.encode(fieldsInAppPurchasePriceSchedules, forKey: "fields[inAppPurchasePriceSchedules]")
            encoder.encode(fieldsInAppPurchaseAvailabilities, forKey: "fields[inAppPurchaseAvailabilities]")
            encoder.encode(fieldsInAppPurchaseImages, forKey: "fields[inAppPurchaseImages]")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitImages, forKey: "limit[images]")
            encoder.encode(limitInAppPurchaseLocalizations, forKey: "limit[inAppPurchaseLocalizations]")
            encoder.encode(limitPricePoints, forKey: "limit[pricePoints]")
            return encoder.items
        }

        public enum FieldsInAppPurchases: String, CaseIterable, Codable, Sendable {
            case name
            case productID = "productId"
            case inAppPurchaseType
            case state
            case reviewNote
            case familySharable
            case contentHosting
            case app
            case inAppPurchaseLocalizations
            case pricePoints
            case content
            case appStoreReviewScreenshot
            case promotedPurchase
            case iapPriceSchedule
            case inAppPurchaseAvailability
            case images
        }

        public enum FieldsInAppPurchaseLocalizations: String, CaseIterable, Codable, Sendable {
            case name
            case locale
            case description
            case state
            case inAppPurchaseV2
        }

        public enum FieldsInAppPurchasePricePoints: String, CaseIterable, Codable, Sendable {
            case customerPrice
            case proceeds
            case territory
            case inAppPurchaseV2
        }

        public enum FieldsInAppPurchaseContents: String, CaseIterable, Codable, Sendable {
            case fileName
            case fileSize
            case url
            case lastModifiedDate
            case inAppPurchaseV2
        }

        public enum FieldsInAppPurchaseAppStoreReviewScreenshots: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case sourceFileChecksum
            case imageAsset
            case assetToken
            case assetType
            case uploadOperations
            case assetDeliveryState
            case uploaded
            case inAppPurchaseV2
        }

        public enum FieldsPromotedPurchases: String, CaseIterable, Codable, Sendable {
            case visibleForAllUsers
            case enabled
            case state
            case app
            case inAppPurchaseV2
            case subscription
            case promotionImages
        }

        public enum FieldsInAppPurchasePriceSchedules: String, CaseIterable, Codable, Sendable {
            case inAppPurchase
            case baseTerritory
            case manualPrices
            case automaticPrices
        }

        public enum FieldsInAppPurchaseAvailabilities: String, CaseIterable, Codable, Sendable {
            case availableInNewTerritories
            case inAppPurchase
            case availableTerritories
        }

        public enum FieldsInAppPurchaseImages: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case sourceFileChecksum
            case assetToken
            case imageAsset
            case uploadOperations
            case uploaded
            case state
            case inAppPurchase
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case inAppPurchaseLocalizations
            case pricePoints
            case content
            case appStoreReviewScreenshot
            case promotedPurchase
            case iapPriceSchedule
            case inAppPurchaseAvailability
            case images
        }

        public func patch(_ body: AppStoreAPI.InAppPurchaseV2UpdateRequest) -> Request<AppStoreAPI.InAppPurchaseV2Response> {
            Request(path: path, method: "PATCH", body: body, id: "inAppPurchasesV2_updateInstance")
        }

        public var delete: Request<Void> {
            Request(path: path, method: "DELETE", id: "inAppPurchasesV2_deleteInstance")
        }
    }
}
