// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.AppStoreVersionExperiments {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v1/appStoreVersionExperiments/{id}`
        public let path: String

        public func get(fieldsAppStoreVersionExperiments: [FieldsAppStoreVersionExperiments]? = nil, fieldsAppStoreVersionExperimentTreatments: [FieldsAppStoreVersionExperimentTreatments]? = nil, include: [Include]? = nil, limitAppStoreVersionExperimentTreatments: Int? = nil) -> Request<AppStoreAPI.AppStoreVersionExperimentResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsAppStoreVersionExperiments, fieldsAppStoreVersionExperimentTreatments, include, limitAppStoreVersionExperimentTreatments), id: "appStoreVersionExperiments_getInstance")
        }

        private func makeGetQuery(_ fieldsAppStoreVersionExperiments: [FieldsAppStoreVersionExperiments]?, _ fieldsAppStoreVersionExperimentTreatments: [FieldsAppStoreVersionExperimentTreatments]?, _ include: [Include]?, _ limitAppStoreVersionExperimentTreatments: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsAppStoreVersionExperiments, forKey: "fields[appStoreVersionExperiments]")
            encoder.encode(fieldsAppStoreVersionExperimentTreatments, forKey: "fields[appStoreVersionExperimentTreatments]")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitAppStoreVersionExperimentTreatments, forKey: "limit[appStoreVersionExperimentTreatments]")
            return encoder.items
        }

        public enum FieldsAppStoreVersionExperiments: String, CaseIterable, Codable, Sendable {
            case name
            case trafficProportion
            case state
            case reviewRequired
            case startDate
            case endDate
            case appStoreVersion
            case appStoreVersionExperimentTreatments
        }

        public enum FieldsAppStoreVersionExperimentTreatments: String, CaseIterable, Codable, Sendable {
            case name
            case appIcon
            case appIconName
            case promotedDate
            case appStoreVersionExperiment
            case appStoreVersionExperimentV2
            case appStoreVersionExperimentTreatmentLocalizations
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case appStoreVersion
            case appStoreVersionExperimentTreatments
        }

        public func patch(_ body: AppStoreAPI.AppStoreVersionExperimentUpdateRequest) -> Request<AppStoreAPI.AppStoreVersionExperimentResponse> {
            Request(path: path, method: "PATCH", body: body, id: "appStoreVersionExperiments_updateInstance")
        }

        public var delete: Request<Void> {
            Request(path: path, method: "DELETE", id: "appStoreVersionExperiments_deleteInstance")
        }
    }
}
