// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.AppPreviewSets {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v1/appPreviewSets/{id}`
        public let path: String

        public func get(fieldsAppPreviewSets: [FieldsAppPreviewSets]? = nil, fieldsAppPreviews: [FieldsAppPreviews]? = nil, include: [Include]? = nil, limitAppPreviews: Int? = nil) -> Request<AppStoreAPI.AppPreviewSetResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsAppPreviewSets, fieldsAppPreviews, include, limitAppPreviews), id: "appPreviewSets_getInstance")
        }

        private func makeGetQuery(_ fieldsAppPreviewSets: [FieldsAppPreviewSets]?, _ fieldsAppPreviews: [FieldsAppPreviews]?, _ include: [Include]?, _ limitAppPreviews: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsAppPreviewSets, forKey: "fields[appPreviewSets]")
            encoder.encode(fieldsAppPreviews, forKey: "fields[appPreviews]")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitAppPreviews, forKey: "limit[appPreviews]")
            return encoder.items
        }

        public enum FieldsAppPreviewSets: String, CaseIterable, Codable, Sendable {
            case previewType
            case appStoreVersionLocalization
            case appCustomProductPageLocalization
            case appStoreVersionExperimentTreatmentLocalization
            case appPreviews
        }

        public enum FieldsAppPreviews: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case sourceFileChecksum
            case previewFrameTimeCode
            case mimeType
            case videoURL = "videoUrl"
            case previewImage
            case uploadOperations
            case assetDeliveryState
            case uploaded
            case appPreviewSet
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case appStoreVersionLocalization
            case appCustomProductPageLocalization
            case appStoreVersionExperimentTreatmentLocalization
            case appPreviews
        }

        public var delete: Request<Void> {
            Request(path: path, method: "DELETE", id: "appPreviewSets_deleteInstance")
        }
    }
}
