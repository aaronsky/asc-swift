// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.BackgroundAssetUploadFiles {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v1/backgroundAssetUploadFiles/{id}`
        public let path: String

        public func get(fieldsBackgroundAssetUploadFiles: [FieldsBackgroundAssetUploadFiles]? = nil) -> Request<AppStoreAPI.BackgroundAssetUploadFileResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsBackgroundAssetUploadFiles), id: "backgroundAssetUploadFiles_getInstance")
        }

        private func makeGetQuery(_ fieldsBackgroundAssetUploadFiles: [FieldsBackgroundAssetUploadFiles]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(fieldsBackgroundAssetUploadFiles, forKey: "fields[backgroundAssetUploadFiles]", explode: false)
            return encoder.items
        }

        public enum FieldsBackgroundAssetUploadFiles: String, CaseIterable, Codable, Sendable {
            case assetDeliveryState
            case assetToken
            case assetType
            case fileName
            case fileSize
            case sourceFileChecksum
            case uploadOperations
        }

        public func patch(_ body: AppStoreAPI.BackgroundAssetUploadFileUpdateRequest) -> Request<AppStoreAPI.BackgroundAssetUploadFileResponse> {
            Request(path: path, method: "PATCH", body: body, id: "backgroundAssetUploadFiles_updateInstance")
        }
    }
}
