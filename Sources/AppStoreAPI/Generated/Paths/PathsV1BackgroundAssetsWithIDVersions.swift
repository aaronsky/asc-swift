// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.BackgroundAssets.WithID {
    public var versions: Versions {
        Versions(path: path + "/versions")
    }

    public struct Versions {
        /// Path: `/v1/backgroundAssets/{id}/versions`
        public let path: String

        public func get(filterState: [FilterState]? = nil, filterVersion: [String]? = nil, filterInternalBetaReleaseState: [FilterInternalBetaReleaseState]? = nil, sort: [Sort]? = nil, fieldsBackgroundAssetVersions: [FieldsBackgroundAssetVersions]? = nil, fieldsBackgroundAssetVersionInternalBetaReleases: [FieldsBackgroundAssetVersionInternalBetaReleases]? = nil, fieldsBackgroundAssetUploadFiles: [FieldsBackgroundAssetUploadFiles]? = nil, limit: Int? = nil, include: [Include]? = nil) -> Request<AppStoreAPI.BackgroundAssetVersionsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(filterState, filterVersion, filterInternalBetaReleaseState, sort, fieldsBackgroundAssetVersions, fieldsBackgroundAssetVersionInternalBetaReleases, fieldsBackgroundAssetUploadFiles, limit, include), id: "backgroundAssets_versions_getToManyRelated")
        }

        private func makeGetQuery(_ filterState: [FilterState]?, _ filterVersion: [String]?, _ filterInternalBetaReleaseState: [FilterInternalBetaReleaseState]?, _ sort: [Sort]?, _ fieldsBackgroundAssetVersions: [FieldsBackgroundAssetVersions]?, _ fieldsBackgroundAssetVersionInternalBetaReleases: [FieldsBackgroundAssetVersionInternalBetaReleases]?, _ fieldsBackgroundAssetUploadFiles: [FieldsBackgroundAssetUploadFiles]?, _ limit: Int?, _ include: [Include]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(filterState, forKey: "filter[state]")
            encoder.encode(filterVersion, forKey: "filter[version]")
            encoder.encode(filterInternalBetaReleaseState, forKey: "filter[internalBetaRelease.state]")
            encoder.encode(sort, forKey: "sort")
            encoder.encode(fieldsBackgroundAssetVersions, forKey: "fields[backgroundAssetVersions]")
            encoder.encode(fieldsBackgroundAssetVersionInternalBetaReleases, forKey: "fields[backgroundAssetVersionInternalBetaReleases]")
            encoder.encode(fieldsBackgroundAssetUploadFiles, forKey: "fields[backgroundAssetUploadFiles]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            return encoder.items
        }

        public enum FilterState: String, CaseIterable, Codable, Sendable {
            case awaitingUpload = "AWAITING_UPLOAD"
            case processing = "PROCESSING"
            case failed = "FAILED"
            case complete = "COMPLETE"
        }

        public enum FilterInternalBetaReleaseState: String, CaseIterable, Codable, Sendable {
            case readyForTesting = "READY_FOR_TESTING"
            case superseded = "SUPERSEDED"
        }

        public enum Sort: String, CaseIterable, Codable, Sendable {
            case version
            case minusVersion = "-version"
        }

        public enum FieldsBackgroundAssetVersions: String, CaseIterable, Codable, Sendable {
            case createdDate
            case platforms
            case state
            case version
            case internalBetaRelease
            case assetFile
            case manifestFile
            case backgroundAssetUploadFiles
        }

        public enum FieldsBackgroundAssetVersionInternalBetaReleases: String, CaseIterable, Codable, Sendable {
            case state
            case backgroundAssetVersion
        }

        public enum FieldsBackgroundAssetUploadFiles: String, CaseIterable, Codable, Sendable {
            case assetDeliveryState
            case assetToken
            case assetType
            case fileName
            case fileSize
            case sourceFileChecksum
            case uploadOperations
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case internalBetaRelease
            case assetFile
            case manifestFile
        }
    }
}
