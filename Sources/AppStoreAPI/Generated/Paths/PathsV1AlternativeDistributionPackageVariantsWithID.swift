// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.AlternativeDistributionPackageVariants {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v1/alternativeDistributionPackageVariants/{id}`
        public let path: String

        public func get(fieldsAlternativeDistributionPackageVariants: [FieldsAlternativeDistributionPackageVariants]? = nil) -> Request<AppStoreAPI.AlternativeDistributionPackageVariantResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsAlternativeDistributionPackageVariants), id: "alternativeDistributionPackageVariants_getInstance")
        }

        private func makeGetQuery(_ fieldsAlternativeDistributionPackageVariants: [FieldsAlternativeDistributionPackageVariants]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(fieldsAlternativeDistributionPackageVariants, forKey: "fields[alternativeDistributionPackageVariants]", explode: false)
            return encoder.items
        }

        public enum FieldsAlternativeDistributionPackageVariants: String, CaseIterable, Codable, Sendable {
            case url
            case urlExpirationDate
            case alternativeDistributionKeyBlob
            case fileChecksum
        }
    }
}
