// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.BetaTesters.WithID {
    public var betaGroups: BetaGroups {
        BetaGroups(path: path + "/betaGroups")
    }

    public struct BetaGroups {
        /// Path: `/v1/betaTesters/{id}/betaGroups`
        public let path: String

        public func get(fieldsBetaGroups: [FieldsBetaGroups]? = nil, limit: Int? = nil) -> Request<AppStoreAPI.BetaGroupsWithoutIncludesResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsBetaGroups, limit), id: "betaTesters_betaGroups_getToManyRelated")
        }

        private func makeGetQuery(_ fieldsBetaGroups: [FieldsBetaGroups]?, _ limit: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(fieldsBetaGroups, forKey: "fields[betaGroups]", explode: false)
            encoder.encode(limit, forKey: "limit")
            return encoder.items
        }

        public enum FieldsBetaGroups: String, CaseIterable, Codable, Sendable {
            case name
            case createdDate
            case isInternalGroup
            case hasAccessToAllBuilds
            case publicLinkEnabled
            case publicLinkID = "publicLinkId"
            case publicLinkLimitEnabled
            case publicLinkLimit
            case publicLink
            case feedbackEnabled
            case iosBuildsAvailableForAppleSiliconMac
            case iosBuildsAvailableForAppleVision
            case app
            case builds
            case betaTesters
            case betaRecruitmentCriteria
            case betaRecruitmentCriterionCompatibleBuildCheck
        }
    }
}
