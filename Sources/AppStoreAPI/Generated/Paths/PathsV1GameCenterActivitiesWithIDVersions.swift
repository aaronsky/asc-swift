// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.GameCenterActivities.WithID {
    public var versions: Versions {
        Versions(path: path + "/versions")
    }

    public struct Versions {
        /// Path: `/v1/gameCenterActivities/{id}/versions`
        public let path: String

        public func get(fieldsGameCenterActivityVersions: [FieldsGameCenterActivityVersions]? = nil, fieldsGameCenterActivities: [FieldsGameCenterActivities]? = nil, fieldsGameCenterActivityLocalizations: [FieldsGameCenterActivityLocalizations]? = nil, fieldsGameCenterActivityImages: [FieldsGameCenterActivityImages]? = nil, fieldsGameCenterActivityVersionReleases: [FieldsGameCenterActivityVersionReleases]? = nil, limit: Int? = nil, include: [Include]? = nil, limitLocalizations: Int? = nil, limitReleases: Int? = nil) -> Request<AppStoreAPI.GameCenterActivityVersionsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsGameCenterActivityVersions, fieldsGameCenterActivities, fieldsGameCenterActivityLocalizations, fieldsGameCenterActivityImages, fieldsGameCenterActivityVersionReleases, limit, include, limitLocalizations, limitReleases), id: "gameCenterActivities_versions_getToManyRelated")
        }

        private func makeGetQuery(_ fieldsGameCenterActivityVersions: [FieldsGameCenterActivityVersions]?, _ fieldsGameCenterActivities: [FieldsGameCenterActivities]?, _ fieldsGameCenterActivityLocalizations: [FieldsGameCenterActivityLocalizations]?, _ fieldsGameCenterActivityImages: [FieldsGameCenterActivityImages]?, _ fieldsGameCenterActivityVersionReleases: [FieldsGameCenterActivityVersionReleases]?, _ limit: Int?, _ include: [Include]?, _ limitLocalizations: Int?, _ limitReleases: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsGameCenterActivityVersions, forKey: "fields[gameCenterActivityVersions]")
            encoder.encode(fieldsGameCenterActivities, forKey: "fields[gameCenterActivities]")
            encoder.encode(fieldsGameCenterActivityLocalizations, forKey: "fields[gameCenterActivityLocalizations]")
            encoder.encode(fieldsGameCenterActivityImages, forKey: "fields[gameCenterActivityImages]")
            encoder.encode(fieldsGameCenterActivityVersionReleases, forKey: "fields[gameCenterActivityVersionReleases]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitLocalizations, forKey: "limit[localizations]")
            encoder.encode(limitReleases, forKey: "limit[releases]")
            return encoder.items
        }

        public enum FieldsGameCenterActivityVersions: String, CaseIterable, Codable, Sendable {
            case version
            case state
            case fallbackURL = "fallbackUrl"
            case activity
            case localizations
            case defaultImage
            case releases
        }

        public enum FieldsGameCenterActivities: String, CaseIterable, Codable, Sendable {
            case referenceName
            case vendorIdentifier
            case playStyle
            case minimumPlayersCount
            case maximumPlayersCount
            case supportsPartyCode
            case archived
            case properties
            case gameCenterDetail
            case gameCenterGroup
            case achievements
            case leaderboards
            case versions
        }

        public enum FieldsGameCenterActivityLocalizations: String, CaseIterable, Codable, Sendable {
            case locale
            case name
            case description
            case version
            case image
        }

        public enum FieldsGameCenterActivityImages: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case imageAsset
            case uploadOperations
            case assetDeliveryState
        }

        public enum FieldsGameCenterActivityVersionReleases: String, CaseIterable, Codable, Sendable {
            case version
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case activity
            case localizations
            case defaultImage
            case releases
        }
    }
}
