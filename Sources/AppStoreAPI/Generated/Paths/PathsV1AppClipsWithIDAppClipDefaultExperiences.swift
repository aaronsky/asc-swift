// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.AppClips.WithID {
    public var appClipDefaultExperiences: AppClipDefaultExperiences {
        AppClipDefaultExperiences(path: path + "/appClipDefaultExperiences")
    }

    public struct AppClipDefaultExperiences {
        /// Path: `/v1/appClips/{id}/appClipDefaultExperiences`
        public let path: String

        public func get(isExistsReleaseWithAppStoreVersion: Bool? = nil, fieldsAppClipDefaultExperiences: [FieldsAppClipDefaultExperiences]? = nil, fieldsAppClips: [FieldsAppClips]? = nil, fieldsAppStoreVersions: [FieldsAppStoreVersions]? = nil, fieldsAppClipDefaultExperienceLocalizations: [FieldsAppClipDefaultExperienceLocalizations]? = nil, fieldsAppClipAppStoreReviewDetails: [FieldsAppClipAppStoreReviewDetails]? = nil, limit: Int? = nil, include: [Include]? = nil, limitAppClipDefaultExperienceLocalizations: Int? = nil) -> Request<AppStoreAPI.AppClipDefaultExperiencesResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(isExistsReleaseWithAppStoreVersion, fieldsAppClipDefaultExperiences, fieldsAppClips, fieldsAppStoreVersions, fieldsAppClipDefaultExperienceLocalizations, fieldsAppClipAppStoreReviewDetails, limit, include, limitAppClipDefaultExperienceLocalizations), id: "appClips_appClipDefaultExperiences_getToManyRelated")
        }

        private func makeGetQuery(_ isExistsReleaseWithAppStoreVersion: Bool?, _ fieldsAppClipDefaultExperiences: [FieldsAppClipDefaultExperiences]?, _ fieldsAppClips: [FieldsAppClips]?, _ fieldsAppStoreVersions: [FieldsAppStoreVersions]?, _ fieldsAppClipDefaultExperienceLocalizations: [FieldsAppClipDefaultExperienceLocalizations]?, _ fieldsAppClipAppStoreReviewDetails: [FieldsAppClipAppStoreReviewDetails]?, _ limit: Int?, _ include: [Include]?, _ limitAppClipDefaultExperienceLocalizations: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(isExistsReleaseWithAppStoreVersion, forKey: "exists[releaseWithAppStoreVersion]")
            encoder.encode(fieldsAppClipDefaultExperiences, forKey: "fields[appClipDefaultExperiences]")
            encoder.encode(fieldsAppClips, forKey: "fields[appClips]")
            encoder.encode(fieldsAppStoreVersions, forKey: "fields[appStoreVersions]")
            encoder.encode(fieldsAppClipDefaultExperienceLocalizations, forKey: "fields[appClipDefaultExperienceLocalizations]")
            encoder.encode(fieldsAppClipAppStoreReviewDetails, forKey: "fields[appClipAppStoreReviewDetails]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitAppClipDefaultExperienceLocalizations, forKey: "limit[appClipDefaultExperienceLocalizations]")
            return encoder.items
        }

        public enum FieldsAppClipDefaultExperiences: String, CaseIterable, Codable, Sendable {
            case action
            case appClip
            case releaseWithAppStoreVersion
            case appClipDefaultExperienceLocalizations
            case appClipAppStoreReviewDetail
        }

        public enum FieldsAppClips: String, CaseIterable, Codable, Sendable {
            case bundleID = "bundleId"
            case app
            case appClipDefaultExperiences
            case appClipAdvancedExperiences
        }

        public enum FieldsAppStoreVersions: String, CaseIterable, Codable, Sendable {
            case platform
            case versionString
            case appStoreState
            case appVersionState
            case copyright
            case reviewType
            case releaseType
            case earliestReleaseDate
            case usesIdfa
            case downloadable
            case createdDate
            case app
            case ageRatingDeclaration
            case appStoreVersionLocalizations
            case build
            case appStoreVersionPhasedRelease
            case gameCenterAppVersion
            case routingAppCoverage
            case appStoreReviewDetail
            case appStoreVersionSubmission
            case appClipDefaultExperience
            case appStoreVersionExperiments
            case appStoreVersionExperimentsV2
            case customerReviews
            case alternativeDistributionPackage
        }

        public enum FieldsAppClipDefaultExperienceLocalizations: String, CaseIterable, Codable, Sendable {
            case locale
            case subtitle
            case appClipDefaultExperience
            case appClipHeaderImage
        }

        public enum FieldsAppClipAppStoreReviewDetails: String, CaseIterable, Codable, Sendable {
            case invocationURLs = "invocationUrls"
            case appClipDefaultExperience
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case appClip
            case releaseWithAppStoreVersion
            case appClipDefaultExperienceLocalizations
            case appClipAppStoreReviewDetail
        }
    }
}
