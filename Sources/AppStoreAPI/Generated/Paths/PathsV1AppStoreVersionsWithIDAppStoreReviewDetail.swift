// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.AppStoreVersions.WithID {
    public var appStoreReviewDetail: AppStoreReviewDetail {
        AppStoreReviewDetail(path: path + "/appStoreReviewDetail")
    }

    public struct AppStoreReviewDetail {
        /// Path: `/v1/appStoreVersions/{id}/appStoreReviewDetail`
        public let path: String

        public func get(fieldsAppStoreReviewDetails: [FieldsAppStoreReviewDetails]? = nil, fieldsAppStoreVersions: [FieldsAppStoreVersions]? = nil, fieldsAppStoreReviewAttachments: [FieldsAppStoreReviewAttachments]? = nil, include: [Include]? = nil, limitAppStoreReviewAttachments: Int? = nil) -> Request<AppStoreAPI.AppStoreReviewDetailResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsAppStoreReviewDetails, fieldsAppStoreVersions, fieldsAppStoreReviewAttachments, include, limitAppStoreReviewAttachments), id: "appStoreVersions_appStoreReviewDetail_getToOneRelated")
        }

        private func makeGetQuery(_ fieldsAppStoreReviewDetails: [FieldsAppStoreReviewDetails]?, _ fieldsAppStoreVersions: [FieldsAppStoreVersions]?, _ fieldsAppStoreReviewAttachments: [FieldsAppStoreReviewAttachments]?, _ include: [Include]?, _ limitAppStoreReviewAttachments: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsAppStoreReviewDetails, forKey: "fields[appStoreReviewDetails]")
            encoder.encode(fieldsAppStoreVersions, forKey: "fields[appStoreVersions]")
            encoder.encode(fieldsAppStoreReviewAttachments, forKey: "fields[appStoreReviewAttachments]")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitAppStoreReviewAttachments, forKey: "limit[appStoreReviewAttachments]")
            return encoder.items
        }

        public enum FieldsAppStoreReviewDetails: String, CaseIterable, Codable, Sendable {
            case contactFirstName
            case contactLastName
            case contactPhone
            case contactEmail
            case demoAccountName
            case demoAccountPassword
            case demoAccountRequired
            case notes
            case appStoreVersion
            case appStoreReviewAttachments
        }

        public enum FieldsAppStoreVersions: String, CaseIterable, Codable, Sendable {
            case platform
            case versionString
            case appStoreState
            case appVersionState
            case copyright
            case reviewType
            case releaseType
            case earliestReleaseDate
            case usesIdfa
            case downloadable
            case createdDate
            case app
            case ageRatingDeclaration
            case appStoreVersionLocalizations
            case build
            case appStoreVersionPhasedRelease
            case gameCenterAppVersion
            case routingAppCoverage
            case appStoreReviewDetail
            case appStoreVersionSubmission
            case appClipDefaultExperience
            case appStoreVersionExperiments
            case appStoreVersionExperimentsV2
            case customerReviews
            case alternativeDistributionPackage
        }

        public enum FieldsAppStoreReviewAttachments: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case sourceFileChecksum
            case uploadOperations
            case assetDeliveryState
            case appStoreReviewDetail
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case appStoreVersion
            case appStoreReviewAttachments
        }
    }
}
