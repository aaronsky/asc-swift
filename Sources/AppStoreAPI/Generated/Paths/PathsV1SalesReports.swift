// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1 {
    public var salesReports: SalesReports {
        SalesReports(path: path + "/salesReports")
    }

    public struct SalesReports {
        /// Path: `/v1/salesReports`
        public let path: String

        public func get(filterVendorNumber: [String], filterReportType: [FilterReportType], filterReportSubType: [FilterReportSubType], filterFrequency: [FilterFrequency], filterReportDate: [String]? = nil, filterVersion: [String]? = nil) -> Request<Data> {
            Request(path: path, method: "GET", query: makeGetQuery(filterVendorNumber, filterReportType, filterReportSubType, filterFrequency, filterReportDate, filterVersion), id: "salesReports_getCollection")
        }

        private func makeGetQuery(_ filterVendorNumber: [String], _ filterReportType: [FilterReportType], _ filterReportSubType: [FilterReportSubType], _ filterFrequency: [FilterFrequency], _ filterReportDate: [String]?, _ filterVersion: [String]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(filterVendorNumber, forKey: "filter[vendorNumber]")
            encoder.encode(filterReportType, forKey: "filter[reportType]")
            encoder.encode(filterReportSubType, forKey: "filter[reportSubType]")
            encoder.encode(filterFrequency, forKey: "filter[frequency]")
            encoder.encode(filterReportDate, forKey: "filter[reportDate]")
            encoder.encode(filterVersion, forKey: "filter[version]")
            return encoder.items
        }

        public enum FilterReportType: String, CaseIterable, Codable, Sendable {
            case sales = "SALES"
            case preOrder = "PRE_ORDER"
            case newsstand = "NEWSSTAND"
            case subscription = "SUBSCRIPTION"
            case subscriptionEvent = "SUBSCRIPTION_EVENT"
            case subscriber = "SUBSCRIBER"
            case subscriptionOfferCodeRedemption = "SUBSCRIPTION_OFFER_CODE_REDEMPTION"
            case installs = "INSTALLS"
            case firstAnnual = "FIRST_ANNUAL"
            case winBackEligibility = "WIN_BACK_ELIGIBILITY"
        }

        public enum FilterReportSubType: String, CaseIterable, Codable, Sendable {
            case summary = "SUMMARY"
            case detailed = "DETAILED"
            case summaryInstallType = "SUMMARY_INSTALL_TYPE"
            case summaryTerritory = "SUMMARY_TERRITORY"
            case summaryChannel = "SUMMARY_CHANNEL"
        }

        public enum FilterFrequency: String, CaseIterable, Codable, Sendable {
            case daily = "DAILY"
            case weekly = "WEEKLY"
            case monthly = "MONTHLY"
            case yearly = "YEARLY"
        }
    }
}
