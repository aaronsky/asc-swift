// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.Apps.WithID {
    public var perfPowerMetrics: PerfPowerMetrics {
        PerfPowerMetrics(path: path + "/perfPowerMetrics")
    }

    public struct PerfPowerMetrics {
        /// Path: `/v1/apps/{id}/perfPowerMetrics`
        public let path: String

        public func get(filterPlatform: [FilterPlatform]? = nil, filterMetricType: [FilterMetricType]? = nil, filterDeviceType: [String]? = nil) -> Request<XcodeMetrics> {
            Request(path: path, method: "GET", query: makeGetQuery(filterPlatform, filterMetricType, filterDeviceType), id: "apps_perfPowerMetrics_getToManyRelated")
        }

        private func makeGetQuery(_ filterPlatform: [FilterPlatform]?, _ filterMetricType: [FilterMetricType]?, _ filterDeviceType: [String]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(filterPlatform, forKey: "filter[platform]")
            encoder.encode(filterMetricType, forKey: "filter[metricType]")
            encoder.encode(filterDeviceType, forKey: "filter[deviceType]")
            return encoder.items
        }

        public enum FilterPlatform: String, CaseIterable, Codable, Sendable {
            case iOS = "IOS"
        }

        public enum FilterMetricType: String, CaseIterable, Codable, Sendable {
            case disk = "DISK"
            case hang = "HANG"
            case battery = "BATTERY"
            case launch = "LAUNCH"
            case memory = "MEMORY"
            case animation = "ANIMATION"
            case termination = "TERMINATION"
        }
    }
}
