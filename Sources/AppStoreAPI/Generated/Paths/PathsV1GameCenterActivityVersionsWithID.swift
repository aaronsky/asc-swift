// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.GameCenterActivityVersions {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v1/gameCenterActivityVersions/{id}`
        public let path: String

        public func get(fieldsGameCenterActivityVersions: [FieldsGameCenterActivityVersions]? = nil, fieldsGameCenterActivityLocalizations: [FieldsGameCenterActivityLocalizations]? = nil, fieldsGameCenterActivityImages: [FieldsGameCenterActivityImages]? = nil, include: [Include]? = nil, limitLocalizations: Int? = nil, limitReleases: Int? = nil) -> Request<AppStoreAPI.GameCenterActivityVersionResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsGameCenterActivityVersions, fieldsGameCenterActivityLocalizations, fieldsGameCenterActivityImages, include, limitLocalizations, limitReleases), id: "gameCenterActivityVersions_getInstance")
        }

        private func makeGetQuery(_ fieldsGameCenterActivityVersions: [FieldsGameCenterActivityVersions]?, _ fieldsGameCenterActivityLocalizations: [FieldsGameCenterActivityLocalizations]?, _ fieldsGameCenterActivityImages: [FieldsGameCenterActivityImages]?, _ include: [Include]?, _ limitLocalizations: Int?, _ limitReleases: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsGameCenterActivityVersions, forKey: "fields[gameCenterActivityVersions]")
            encoder.encode(fieldsGameCenterActivityLocalizations, forKey: "fields[gameCenterActivityLocalizations]")
            encoder.encode(fieldsGameCenterActivityImages, forKey: "fields[gameCenterActivityImages]")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitLocalizations, forKey: "limit[localizations]")
            encoder.encode(limitReleases, forKey: "limit[releases]")
            return encoder.items
        }

        public enum FieldsGameCenterActivityVersions: String, CaseIterable, Codable, Sendable {
            case version
            case state
            case fallbackURL = "fallbackUrl"
            case activity
            case localizations
            case defaultImage
            case releases
        }

        public enum FieldsGameCenterActivityLocalizations: String, CaseIterable, Codable, Sendable {
            case locale
            case name
            case description
            case version
            case image
        }

        public enum FieldsGameCenterActivityImages: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case imageAsset
            case uploadOperations
            case assetDeliveryState
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case activity
            case localizations
            case defaultImage
            case releases
        }

        public func patch(_ body: AppStoreAPI.GameCenterActivityVersionUpdateRequest) -> Request<AppStoreAPI.GameCenterActivityVersionResponse> {
            Request(path: path, method: "PATCH", body: body, id: "gameCenterActivityVersions_updateInstance")
        }
    }
}
