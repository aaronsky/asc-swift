// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1 {
    public var appCategories: AppCategories {
        AppCategories(path: path + "/appCategories")
    }

    public struct AppCategories {
        /// Path: `/v1/appCategories`
        public let path: String

        public func get(filterPlatforms: [FilterPlatforms]? = nil, isExistsParent: Bool? = nil, fieldsAppCategories: [FieldsAppCategories]? = nil, limit: Int? = nil, include: [Include]? = nil, limitSubcategories: Int? = nil) -> Request<AppStoreAPI.AppCategoriesResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(filterPlatforms, isExistsParent, fieldsAppCategories, limit, include, limitSubcategories), id: "appCategories_getCollection")
        }

        private func makeGetQuery(_ filterPlatforms: [FilterPlatforms]?, _ isExistsParent: Bool?, _ fieldsAppCategories: [FieldsAppCategories]?, _ limit: Int?, _ include: [Include]?, _ limitSubcategories: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(filterPlatforms, forKey: "filter[platforms]")
            encoder.encode(isExistsParent, forKey: "exists[parent]")
            encoder.encode(fieldsAppCategories, forKey: "fields[appCategories]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitSubcategories, forKey: "limit[subcategories]")
            return encoder.items
        }

        public enum FilterPlatforms: String, CaseIterable, Codable, Sendable {
            case iOS = "IOS"
            case macOS = "MAC_OS"
            case tvOS = "TV_OS"
            case visionOS = "VISION_OS"
        }

        public enum FieldsAppCategories: String, CaseIterable, Codable, Sendable {
            case platforms
            case subcategories
            case parent
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case subcategories
            case parent
        }
    }
}
