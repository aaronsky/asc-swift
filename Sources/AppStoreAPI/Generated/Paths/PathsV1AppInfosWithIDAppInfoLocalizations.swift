// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.AppInfos.WithID {
    public var appInfoLocalizations: AppInfoLocalizations {
        AppInfoLocalizations(path: path + "/appInfoLocalizations")
    }

    public struct AppInfoLocalizations {
        /// Path: `/v1/appInfos/{id}/appInfoLocalizations`
        public let path: String

        public func get(filterLocale: [String]? = nil, fieldsAppInfoLocalizations: [FieldsAppInfoLocalizations]? = nil, fieldsAppInfos: [FieldsAppInfos]? = nil, limit: Int? = nil, include: [Include]? = nil) -> Request<AppStoreAPI.AppInfoLocalizationsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(filterLocale, fieldsAppInfoLocalizations, fieldsAppInfos, limit, include), id: "appInfos_appInfoLocalizations_getToManyRelated")
        }

        private func makeGetQuery(_ filterLocale: [String]?, _ fieldsAppInfoLocalizations: [FieldsAppInfoLocalizations]?, _ fieldsAppInfos: [FieldsAppInfos]?, _ limit: Int?, _ include: [Include]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(filterLocale, forKey: "filter[locale]")
            encoder.encode(fieldsAppInfoLocalizations, forKey: "fields[appInfoLocalizations]")
            encoder.encode(fieldsAppInfos, forKey: "fields[appInfos]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            return encoder.items
        }

        public enum FieldsAppInfoLocalizations: String, CaseIterable, Codable, Sendable {
            case locale
            case name
            case subtitle
            case privacyPolicyURL = "privacyPolicyUrl"
            case privacyChoicesURL = "privacyChoicesUrl"
            case privacyPolicyText
            case appInfo
        }

        public enum FieldsAppInfos: String, CaseIterable, Codable, Sendable {
            case appStoreState
            case state
            case appStoreAgeRating
            case australiaAgeRating
            case brazilAgeRating
            case brazilAgeRatingV2
            case koreaAgeRating
            case kidsAgeBand
            case app
            case ageRatingDeclaration
            case appInfoLocalizations
            case primaryCategory
            case primarySubcategoryOne
            case primarySubcategoryTwo
            case secondaryCategory
            case secondarySubcategoryOne
            case secondarySubcategoryTwo
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case appInfo
        }
    }
}
