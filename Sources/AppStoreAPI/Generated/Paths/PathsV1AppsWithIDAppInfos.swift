// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.Apps.WithID {
    public var appInfos: AppInfos {
        AppInfos(path: path + "/appInfos")
    }

    public struct AppInfos {
        /// Path: `/v1/apps/{id}/appInfos`
        public let path: String

        public func get(fieldsAppInfos: [FieldsAppInfos]? = nil, fieldsApps: [FieldsApps]? = nil, fieldsAgeRatingDeclarations: [FieldsAgeRatingDeclarations]? = nil, fieldsAppInfoLocalizations: [FieldsAppInfoLocalizations]? = nil, fieldsAppCategories: [FieldsAppCategories]? = nil, limit: Int? = nil, include: [Include]? = nil, limitAppInfoLocalizations: Int? = nil) -> Request<AppStoreAPI.AppInfosResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsAppInfos, fieldsApps, fieldsAgeRatingDeclarations, fieldsAppInfoLocalizations, fieldsAppCategories, limit, include, limitAppInfoLocalizations), id: "apps_appInfos_getToManyRelated")
        }

        private func makeGetQuery(_ fieldsAppInfos: [FieldsAppInfos]?, _ fieldsApps: [FieldsApps]?, _ fieldsAgeRatingDeclarations: [FieldsAgeRatingDeclarations]?, _ fieldsAppInfoLocalizations: [FieldsAppInfoLocalizations]?, _ fieldsAppCategories: [FieldsAppCategories]?, _ limit: Int?, _ include: [Include]?, _ limitAppInfoLocalizations: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsAppInfos, forKey: "fields[appInfos]")
            encoder.encode(fieldsApps, forKey: "fields[apps]")
            encoder.encode(fieldsAgeRatingDeclarations, forKey: "fields[ageRatingDeclarations]")
            encoder.encode(fieldsAppInfoLocalizations, forKey: "fields[appInfoLocalizations]")
            encoder.encode(fieldsAppCategories, forKey: "fields[appCategories]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitAppInfoLocalizations, forKey: "limit[appInfoLocalizations]")
            return encoder.items
        }

        public enum FieldsAppInfos: String, CaseIterable, Codable, Sendable {
            case appStoreState
            case state
            case appStoreAgeRating
            case australiaAgeRating
            case brazilAgeRating
            case brazilAgeRatingV2
            case franceAgeRating
            case koreaAgeRating
            case kidsAgeBand
            case app
            case ageRatingDeclaration
            case appInfoLocalizations
            case primaryCategory
            case primarySubcategoryOne
            case primarySubcategoryTwo
            case secondaryCategory
            case secondarySubcategoryOne
            case secondarySubcategoryTwo
        }

        public enum FieldsApps: String, CaseIterable, Codable, Sendable {
            case accessibilityURL = "accessibilityUrl"
            case name
            case bundleID = "bundleId"
            case sku
            case primaryLocale
            case isOrEverWasMadeForKids
            case subscriptionStatusURL = "subscriptionStatusUrl"
            case subscriptionStatusURLVersion = "subscriptionStatusUrlVersion"
            case subscriptionStatusURLForSandbox = "subscriptionStatusUrlForSandbox"
            case subscriptionStatusURLVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
            case contentRightsDeclaration
            case streamlinedPurchasingEnabled
            case accessibilityDeclarations
            case appEncryptionDeclarations
            case ciProduct
            case betaTesters
            case betaGroups
            case appStoreVersions
            case preReleaseVersions
            case betaAppLocalizations
            case builds
            case betaLicenseAgreement
            case betaAppReviewDetail
            case appInfos
            case appClips
            case appPricePoints
            case endUserLicenseAgreement
            case appPriceSchedule
            case appAvailabilityV2
            case inAppPurchases
            case subscriptionGroups
            case gameCenterEnabledVersions
            case perfPowerMetrics
            case appCustomProductPages
            case inAppPurchasesV2
            case promotedPurchases
            case appEvents
            case reviewSubmissions
            case subscriptionGracePeriod
            case customerReviews
            case customerReviewSummarizations
            case gameCenterDetail
            case appStoreVersionExperimentsV2
            case alternativeDistributionKey
            case analyticsReportRequests
            case marketplaceSearchDetail
            case backgroundAssets
            case betaFeedbackScreenshotSubmissions
            case betaFeedbackCrashSubmissions
            case webhooks
        }

        public enum FieldsAgeRatingDeclarations: String, CaseIterable, Codable, Sendable {
            case alcoholTobaccoOrDrugUseOrReferences
            case contests
            case gambling
            case gamblingSimulated
            case kidsAgeBand
            case lootBox
            case medicalOrTreatmentInformation
            case profanityOrCrudeHumor
            case sexualContentGraphicAndNudity
            case sexualContentOrNudity
            case horrorOrFearThemes
            case matureOrSuggestiveThemes
            case unrestrictedWebAccess
            case violenceCartoonOrFantasy
            case violenceRealisticProlongedGraphicOrSadistic
            case violenceRealistic
            case koreaAgeRatingOverride
        }

        public enum FieldsAppInfoLocalizations: String, CaseIterable, Codable, Sendable {
            case locale
            case name
            case subtitle
            case privacyPolicyURL = "privacyPolicyUrl"
            case privacyChoicesURL = "privacyChoicesUrl"
            case privacyPolicyText
            case appInfo
        }

        public enum FieldsAppCategories: String, CaseIterable, Codable, Sendable {
            case platforms
            case subcategories
            case parent
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case app
            case ageRatingDeclaration
            case appInfoLocalizations
            case primaryCategory
            case primarySubcategoryOne
            case primarySubcategoryTwo
            case secondaryCategory
            case secondarySubcategoryOne
            case secondarySubcategoryTwo
        }
    }
}
