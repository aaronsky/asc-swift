// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.GameCenterChallengeVersions.WithID {
    public var localizations: Localizations {
        Localizations(path: path + "/localizations")
    }

    public struct Localizations {
        /// Path: `/v1/gameCenterChallengeVersions/{id}/localizations`
        public let path: String

        public func get(fieldsGameCenterChallengeLocalizations: [FieldsGameCenterChallengeLocalizations]? = nil, fieldsGameCenterChallengeVersions: [FieldsGameCenterChallengeVersions]? = nil, fieldsGameCenterChallengeImages: [FieldsGameCenterChallengeImages]? = nil, limit: Int? = nil, include: [Include]? = nil) -> Request<AppStoreAPI.GameCenterChallengeLocalizationsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsGameCenterChallengeLocalizations, fieldsGameCenterChallengeVersions, fieldsGameCenterChallengeImages, limit, include), id: "gameCenterChallengeVersions_localizations_getToManyRelated")
        }

        private func makeGetQuery(_ fieldsGameCenterChallengeLocalizations: [FieldsGameCenterChallengeLocalizations]?, _ fieldsGameCenterChallengeVersions: [FieldsGameCenterChallengeVersions]?, _ fieldsGameCenterChallengeImages: [FieldsGameCenterChallengeImages]?, _ limit: Int?, _ include: [Include]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsGameCenterChallengeLocalizations, forKey: "fields[gameCenterChallengeLocalizations]")
            encoder.encode(fieldsGameCenterChallengeVersions, forKey: "fields[gameCenterChallengeVersions]")
            encoder.encode(fieldsGameCenterChallengeImages, forKey: "fields[gameCenterChallengeImages]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            return encoder.items
        }

        public enum FieldsGameCenterChallengeLocalizations: String, CaseIterable, Codable, Sendable {
            case locale
            case name
            case description
            case version
            case image
        }

        public enum FieldsGameCenterChallengeVersions: String, CaseIterable, Codable, Sendable {
            case version
            case state
            case challenge
            case localizations
            case releases
            case defaultImage
        }

        public enum FieldsGameCenterChallengeImages: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case imageAsset
            case uploadOperations
            case assetDeliveryState
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case version
            case image
        }
    }
}
