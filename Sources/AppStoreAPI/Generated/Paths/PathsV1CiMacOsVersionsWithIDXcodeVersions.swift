// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.CiMacOsVersions.WithID {
    public var xcodeVersions: XcodeVersions {
        XcodeVersions(path: path + "/xcodeVersions")
    }

    public struct XcodeVersions {
        /// Path: `/v1/ciMacOsVersions/{id}/xcodeVersions`
        public let path: String

        public func get(fieldsCiXcodeVersions: [FieldsCiXcodeVersions]? = nil, fieldsCiMacOsVersions: [FieldsCiMacOsVersions]? = nil, limit: Int? = nil, include: [Include]? = nil, limitMacOsVersions: Int? = nil) -> Request<AppStoreAPI.CiXcodeVersionsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsCiXcodeVersions, fieldsCiMacOsVersions, limit, include, limitMacOsVersions), id: "ciMacOsVersions_xcodeVersions_getToManyRelated")
        }

        private func makeGetQuery(_ fieldsCiXcodeVersions: [FieldsCiXcodeVersions]?, _ fieldsCiMacOsVersions: [FieldsCiMacOsVersions]?, _ limit: Int?, _ include: [Include]?, _ limitMacOsVersions: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsCiXcodeVersions, forKey: "fields[ciXcodeVersions]")
            encoder.encode(fieldsCiMacOsVersions, forKey: "fields[ciMacOsVersions]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitMacOsVersions, forKey: "limit[macOsVersions]")
            return encoder.items
        }

        public enum FieldsCiXcodeVersions: String, CaseIterable, Codable, Sendable {
            case version
            case name
            case testDestinations
            case macOsVersions
        }

        public enum FieldsCiMacOsVersions: String, CaseIterable, Codable, Sendable {
            case version
            case name
            case xcodeVersions
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case macOsVersions
        }
    }
}
