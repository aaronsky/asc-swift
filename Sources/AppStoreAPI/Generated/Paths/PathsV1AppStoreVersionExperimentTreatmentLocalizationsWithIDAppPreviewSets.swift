// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.AppStoreVersionExperimentTreatmentLocalizations.WithID {
    public var appPreviewSets: AppPreviewSets {
        AppPreviewSets(path: path + "/appPreviewSets")
    }

    public struct AppPreviewSets {
        /// Path: `/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appPreviewSets`
        public let path: String

        public func get(filterPreviewType: [FilterPreviewType]? = nil, filterAppStoreVersionLocalization: [String]? = nil, filterAppCustomProductPageLocalization: [String]? = nil, fieldsAppPreviewSets: [FieldsAppPreviewSets]? = nil, fieldsAppStoreVersionLocalizations: [FieldsAppStoreVersionLocalizations]? = nil, fieldsAppCustomProductPageLocalizations: [FieldsAppCustomProductPageLocalizations]? = nil, fieldsAppStoreVersionExperimentTreatmentLocalizations: [FieldsAppStoreVersionExperimentTreatmentLocalizations]? = nil, fieldsAppPreviews: [FieldsAppPreviews]? = nil, limit: Int? = nil, include: [Include]? = nil, limitAppPreviews: Int? = nil) -> Request<AppStoreAPI.AppPreviewSetsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(filterPreviewType, filterAppStoreVersionLocalization, filterAppCustomProductPageLocalization, fieldsAppPreviewSets, fieldsAppStoreVersionLocalizations, fieldsAppCustomProductPageLocalizations, fieldsAppStoreVersionExperimentTreatmentLocalizations, fieldsAppPreviews, limit, include, limitAppPreviews), id: "appStoreVersionExperimentTreatmentLocalizations_appPreviewSets_getToManyRelated")
        }

        private func makeGetQuery(_ filterPreviewType: [FilterPreviewType]?, _ filterAppStoreVersionLocalization: [String]?, _ filterAppCustomProductPageLocalization: [String]?, _ fieldsAppPreviewSets: [FieldsAppPreviewSets]?, _ fieldsAppStoreVersionLocalizations: [FieldsAppStoreVersionLocalizations]?, _ fieldsAppCustomProductPageLocalizations: [FieldsAppCustomProductPageLocalizations]?, _ fieldsAppStoreVersionExperimentTreatmentLocalizations: [FieldsAppStoreVersionExperimentTreatmentLocalizations]?, _ fieldsAppPreviews: [FieldsAppPreviews]?, _ limit: Int?, _ include: [Include]?, _ limitAppPreviews: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(filterPreviewType, forKey: "filter[previewType]")
            encoder.encode(filterAppStoreVersionLocalization, forKey: "filter[appStoreVersionLocalization]")
            encoder.encode(filterAppCustomProductPageLocalization, forKey: "filter[appCustomProductPageLocalization]")
            encoder.encode(fieldsAppPreviewSets, forKey: "fields[appPreviewSets]")
            encoder.encode(fieldsAppStoreVersionLocalizations, forKey: "fields[appStoreVersionLocalizations]")
            encoder.encode(fieldsAppCustomProductPageLocalizations, forKey: "fields[appCustomProductPageLocalizations]")
            encoder.encode(fieldsAppStoreVersionExperimentTreatmentLocalizations, forKey: "fields[appStoreVersionExperimentTreatmentLocalizations]")
            encoder.encode(fieldsAppPreviews, forKey: "fields[appPreviews]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitAppPreviews, forKey: "limit[appPreviews]")
            return encoder.items
        }

        public enum FilterPreviewType: String, CaseIterable, Codable, Sendable {
            case iphone67 = "IPHONE_67"
            case iphone61 = "IPHONE_61"
            case iphone65 = "IPHONE_65"
            case iphone58 = "IPHONE_58"
            case iphone55 = "IPHONE_55"
            case iphone47 = "IPHONE_47"
            case iphone40 = "IPHONE_40"
            case iphone35 = "IPHONE_35"
            case ipadPro3gen129 = "IPAD_PRO_3GEN_129"
            case ipadPro3gen11 = "IPAD_PRO_3GEN_11"
            case ipadPro129 = "IPAD_PRO_129"
            case ipad105 = "IPAD_105"
            case ipad97 = "IPAD_97"
            case desktop = "DESKTOP"
            case appleTv = "APPLE_TV"
            case appleVisionPro = "APPLE_VISION_PRO"
        }

        public enum FieldsAppPreviewSets: String, CaseIterable, Codable, Sendable {
            case previewType
            case appStoreVersionLocalization
            case appCustomProductPageLocalization
            case appStoreVersionExperimentTreatmentLocalization
            case appPreviews
        }

        public enum FieldsAppStoreVersionLocalizations: String, CaseIterable, Codable, Sendable {
            case description
            case locale
            case keywords
            case marketingURL = "marketingUrl"
            case promotionalText
            case supportURL = "supportUrl"
            case whatsNew
            case appStoreVersion
            case appScreenshotSets
            case appPreviewSets
        }

        public enum FieldsAppCustomProductPageLocalizations: String, CaseIterable, Codable, Sendable {
            case locale
            case promotionalText
            case appCustomProductPageVersion
            case appScreenshotSets
            case appPreviewSets
        }

        public enum FieldsAppStoreVersionExperimentTreatmentLocalizations: String, CaseIterable, Codable, Sendable {
            case locale
            case appStoreVersionExperimentTreatment
            case appScreenshotSets
            case appPreviewSets
        }

        public enum FieldsAppPreviews: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case sourceFileChecksum
            case previewFrameTimeCode
            case mimeType
            case videoURL = "videoUrl"
            case previewImage
            case uploadOperations
            case assetDeliveryState
            case uploaded
            case appPreviewSet
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case appStoreVersionLocalization
            case appCustomProductPageLocalization
            case appStoreVersionExperimentTreatmentLocalization
            case appPreviews
        }
    }
}
