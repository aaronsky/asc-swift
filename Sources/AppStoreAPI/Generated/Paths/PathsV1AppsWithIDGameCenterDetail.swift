// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.Apps.WithID {
    public var gameCenterDetail: GameCenterDetail {
        GameCenterDetail(path: path + "/gameCenterDetail")
    }

    public struct GameCenterDetail {
        /// Path: `/v1/apps/{id}/gameCenterDetail`
        public let path: String

        public func get(fieldsGameCenterDetails: [FieldsGameCenterDetails]? = nil, fieldsApps: [FieldsApps]? = nil, fieldsGameCenterAppVersions: [FieldsGameCenterAppVersions]? = nil, fieldsGameCenterGroups: [FieldsGameCenterGroups]? = nil, fieldsGameCenterLeaderboards: [FieldsGameCenterLeaderboards]? = nil, fieldsGameCenterLeaderboardSets: [FieldsGameCenterLeaderboardSets]? = nil, fieldsGameCenterAchievements: [FieldsGameCenterAchievements]? = nil, fieldsGameCenterActivities: [FieldsGameCenterActivities]? = nil, fieldsGameCenterChallenges: [FieldsGameCenterChallenges]? = nil, fieldsGameCenterAchievementReleases: [FieldsGameCenterAchievementReleases]? = nil, fieldsGameCenterActivityVersionReleases: [FieldsGameCenterActivityVersionReleases]? = nil, fieldsGameCenterChallengeVersionReleases: [FieldsGameCenterChallengeVersionReleases]? = nil, fieldsGameCenterLeaderboardReleases: [FieldsGameCenterLeaderboardReleases]? = nil, fieldsGameCenterLeaderboardSetReleases: [FieldsGameCenterLeaderboardSetReleases]? = nil, fieldsAppStoreVersions: [FieldsAppStoreVersions]? = nil, include: [Include]? = nil, limitGameCenterAppVersions: Int? = nil, limitGameCenterLeaderboards: Int? = nil, limitGameCenterLeaderboardSets: Int? = nil, limitGameCenterAchievements: Int? = nil, limitGameCenterActivities: Int? = nil, limitGameCenterChallenges: Int? = nil, limitAchievementReleases: Int? = nil, limitActivityReleases: Int? = nil, limitChallengeReleases: Int? = nil, limitLeaderboardReleases: Int? = nil, limitLeaderboardSetReleases: Int? = nil, limitChallengesMinimumPlatformVersions: Int? = nil) -> Request<AppStoreAPI.GameCenterDetailResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsGameCenterDetails, fieldsApps, fieldsGameCenterAppVersions, fieldsGameCenterGroups, fieldsGameCenterLeaderboards, fieldsGameCenterLeaderboardSets, fieldsGameCenterAchievements, fieldsGameCenterActivities, fieldsGameCenterChallenges, fieldsGameCenterAchievementReleases, fieldsGameCenterActivityVersionReleases, fieldsGameCenterChallengeVersionReleases, fieldsGameCenterLeaderboardReleases, fieldsGameCenterLeaderboardSetReleases, fieldsAppStoreVersions, include, limitGameCenterAppVersions, limitGameCenterLeaderboards, limitGameCenterLeaderboardSets, limitGameCenterAchievements, limitGameCenterActivities, limitGameCenterChallenges, limitAchievementReleases, limitActivityReleases, limitChallengeReleases, limitLeaderboardReleases, limitLeaderboardSetReleases, limitChallengesMinimumPlatformVersions), id: "apps_gameCenterDetail_getToOneRelated")
        }

        private func makeGetQuery(_ fieldsGameCenterDetails: [FieldsGameCenterDetails]?, _ fieldsApps: [FieldsApps]?, _ fieldsGameCenterAppVersions: [FieldsGameCenterAppVersions]?, _ fieldsGameCenterGroups: [FieldsGameCenterGroups]?, _ fieldsGameCenterLeaderboards: [FieldsGameCenterLeaderboards]?, _ fieldsGameCenterLeaderboardSets: [FieldsGameCenterLeaderboardSets]?, _ fieldsGameCenterAchievements: [FieldsGameCenterAchievements]?, _ fieldsGameCenterActivities: [FieldsGameCenterActivities]?, _ fieldsGameCenterChallenges: [FieldsGameCenterChallenges]?, _ fieldsGameCenterAchievementReleases: [FieldsGameCenterAchievementReleases]?, _ fieldsGameCenterActivityVersionReleases: [FieldsGameCenterActivityVersionReleases]?, _ fieldsGameCenterChallengeVersionReleases: [FieldsGameCenterChallengeVersionReleases]?, _ fieldsGameCenterLeaderboardReleases: [FieldsGameCenterLeaderboardReleases]?, _ fieldsGameCenterLeaderboardSetReleases: [FieldsGameCenterLeaderboardSetReleases]?, _ fieldsAppStoreVersions: [FieldsAppStoreVersions]?, _ include: [Include]?, _ limitGameCenterAppVersions: Int?, _ limitGameCenterLeaderboards: Int?, _ limitGameCenterLeaderboardSets: Int?, _ limitGameCenterAchievements: Int?, _ limitGameCenterActivities: Int?, _ limitGameCenterChallenges: Int?, _ limitAchievementReleases: Int?, _ limitActivityReleases: Int?, _ limitChallengeReleases: Int?, _ limitLeaderboardReleases: Int?, _ limitLeaderboardSetReleases: Int?, _ limitChallengesMinimumPlatformVersions: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsGameCenterDetails, forKey: "fields[gameCenterDetails]")
            encoder.encode(fieldsApps, forKey: "fields[apps]")
            encoder.encode(fieldsGameCenterAppVersions, forKey: "fields[gameCenterAppVersions]")
            encoder.encode(fieldsGameCenterGroups, forKey: "fields[gameCenterGroups]")
            encoder.encode(fieldsGameCenterLeaderboards, forKey: "fields[gameCenterLeaderboards]")
            encoder.encode(fieldsGameCenterLeaderboardSets, forKey: "fields[gameCenterLeaderboardSets]")
            encoder.encode(fieldsGameCenterAchievements, forKey: "fields[gameCenterAchievements]")
            encoder.encode(fieldsGameCenterActivities, forKey: "fields[gameCenterActivities]")
            encoder.encode(fieldsGameCenterChallenges, forKey: "fields[gameCenterChallenges]")
            encoder.encode(fieldsGameCenterAchievementReleases, forKey: "fields[gameCenterAchievementReleases]")
            encoder.encode(fieldsGameCenterActivityVersionReleases, forKey: "fields[gameCenterActivityVersionReleases]")
            encoder.encode(fieldsGameCenterChallengeVersionReleases, forKey: "fields[gameCenterChallengeVersionReleases]")
            encoder.encode(fieldsGameCenterLeaderboardReleases, forKey: "fields[gameCenterLeaderboardReleases]")
            encoder.encode(fieldsGameCenterLeaderboardSetReleases, forKey: "fields[gameCenterLeaderboardSetReleases]")
            encoder.encode(fieldsAppStoreVersions, forKey: "fields[appStoreVersions]")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitGameCenterAppVersions, forKey: "limit[gameCenterAppVersions]")
            encoder.encode(limitGameCenterLeaderboards, forKey: "limit[gameCenterLeaderboards]")
            encoder.encode(limitGameCenterLeaderboardSets, forKey: "limit[gameCenterLeaderboardSets]")
            encoder.encode(limitGameCenterAchievements, forKey: "limit[gameCenterAchievements]")
            encoder.encode(limitGameCenterActivities, forKey: "limit[gameCenterActivities]")
            encoder.encode(limitGameCenterChallenges, forKey: "limit[gameCenterChallenges]")
            encoder.encode(limitAchievementReleases, forKey: "limit[achievementReleases]")
            encoder.encode(limitActivityReleases, forKey: "limit[activityReleases]")
            encoder.encode(limitChallengeReleases, forKey: "limit[challengeReleases]")
            encoder.encode(limitLeaderboardReleases, forKey: "limit[leaderboardReleases]")
            encoder.encode(limitLeaderboardSetReleases, forKey: "limit[leaderboardSetReleases]")
            encoder.encode(limitChallengesMinimumPlatformVersions, forKey: "limit[challengesMinimumPlatformVersions]")
            return encoder.items
        }

        public enum FieldsGameCenterDetails: String, CaseIterable, Codable, Sendable {
            case arcadeEnabled
            case challengeEnabled
            case app
            case gameCenterAppVersions
            case gameCenterGroup
            case gameCenterLeaderboards
            case gameCenterLeaderboardSets
            case gameCenterAchievements
            case gameCenterActivities
            case gameCenterChallenges
            case defaultLeaderboard
            case defaultGroupLeaderboard
            case achievementReleases
            case activityReleases
            case challengeReleases
            case leaderboardReleases
            case leaderboardSetReleases
            case challengesMinimumPlatformVersions
        }

        public enum FieldsApps: String, CaseIterable, Codable, Sendable {
            case accessibilityURL = "accessibilityUrl"
            case name
            case bundleID = "bundleId"
            case sku
            case primaryLocale
            case isOrEverWasMadeForKids
            case subscriptionStatusURL = "subscriptionStatusUrl"
            case subscriptionStatusURLVersion = "subscriptionStatusUrlVersion"
            case subscriptionStatusURLForSandbox = "subscriptionStatusUrlForSandbox"
            case subscriptionStatusURLVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
            case contentRightsDeclaration
            case streamlinedPurchasingEnabled
            case accessibilityDeclarations
            case appEncryptionDeclarations
            case ciProduct
            case betaTesters
            case betaGroups
            case appStoreVersions
            case preReleaseVersions
            case betaAppLocalizations
            case builds
            case betaLicenseAgreement
            case betaAppReviewDetail
            case appInfos
            case appClips
            case appPricePoints
            case endUserLicenseAgreement
            case appPriceSchedule
            case appAvailabilityV2
            case inAppPurchases
            case subscriptionGroups
            case gameCenterEnabledVersions
            case perfPowerMetrics
            case appCustomProductPages
            case inAppPurchasesV2
            case promotedPurchases
            case appEvents
            case reviewSubmissions
            case subscriptionGracePeriod
            case customerReviews
            case customerReviewSummarizations
            case gameCenterDetail
            case appStoreVersionExperimentsV2
            case alternativeDistributionKey
            case analyticsReportRequests
            case marketplaceSearchDetail
            case backgroundAssets
            case betaFeedbackScreenshotSubmissions
            case betaFeedbackCrashSubmissions
            case webhooks
        }

        public enum FieldsGameCenterAppVersions: String, CaseIterable, Codable, Sendable {
            case enabled
            case compatibilityVersions
            case appStoreVersion
        }

        public enum FieldsGameCenterGroups: String, CaseIterable, Codable, Sendable {
            case referenceName
            case gameCenterDetails
            case gameCenterLeaderboards
            case gameCenterLeaderboardSets
            case gameCenterAchievements
            case gameCenterActivities
            case gameCenterChallenges
        }

        public enum FieldsGameCenterLeaderboards: String, CaseIterable, Codable, Sendable {
            case defaultFormatter
            case referenceName
            case vendorIdentifier
            case submissionType
            case scoreSortType
            case scoreRangeStart
            case scoreRangeEnd
            case recurrenceStartDate
            case recurrenceDuration
            case recurrenceRule
            case archived
            case activityProperties
            case visibility
            case gameCenterDetail
            case gameCenterGroup
            case groupLeaderboard
            case gameCenterLeaderboardSets
            case localizations
            case releases
            case activity
            case challenge
        }

        public enum FieldsGameCenterLeaderboardSets: String, CaseIterable, Codable, Sendable {
            case referenceName
            case vendorIdentifier
            case gameCenterDetail
            case gameCenterGroup
            case groupLeaderboardSet
            case localizations
            case gameCenterLeaderboards
            case releases
        }

        public enum FieldsGameCenterAchievements: String, CaseIterable, Codable, Sendable {
            case referenceName
            case vendorIdentifier
            case points
            case showBeforeEarned
            case repeatable
            case archived
            case activityProperties
            case gameCenterDetail
            case gameCenterGroup
            case groupAchievement
            case localizations
            case releases
            case activity
        }

        public enum FieldsGameCenterActivities: String, CaseIterable, Codable, Sendable {
            case referenceName
            case vendorIdentifier
            case playStyle
            case minimumPlayersCount
            case maximumPlayersCount
            case supportsPartyCode
            case archived
            case properties
            case gameCenterDetail
            case gameCenterGroup
            case achievements
            case leaderboards
            case versions
        }

        public enum FieldsGameCenterChallenges: String, CaseIterable, Codable, Sendable {
            case referenceName
            case vendorIdentifier
            case allowedDurations
            case archived
            case challengeType
            case repeatable
            case gameCenterDetail
            case gameCenterGroup
            case versions
            case leaderboard
        }

        public enum FieldsGameCenterAchievementReleases: String, CaseIterable, Codable, Sendable {
            case live
            case gameCenterDetail
            case gameCenterAchievement
        }

        public enum FieldsGameCenterActivityVersionReleases: String, CaseIterable, Codable, Sendable {
            case version
        }

        public enum FieldsGameCenterChallengeVersionReleases: String, CaseIterable, Codable, Sendable {
            case version
        }

        public enum FieldsGameCenterLeaderboardReleases: String, CaseIterable, Codable, Sendable {
            case live
            case gameCenterDetail
            case gameCenterLeaderboard
        }

        public enum FieldsGameCenterLeaderboardSetReleases: String, CaseIterable, Codable, Sendable {
            case live
            case gameCenterDetail
            case gameCenterLeaderboardSet
        }

        public enum FieldsAppStoreVersions: String, CaseIterable, Codable, Sendable {
            case platform
            case versionString
            case appStoreState
            case appVersionState
            case copyright
            case reviewType
            case releaseType
            case earliestReleaseDate
            case usesIdfa
            case downloadable
            case createdDate
            case app
            case ageRatingDeclaration
            case appStoreVersionLocalizations
            case build
            case appStoreVersionPhasedRelease
            case gameCenterAppVersion
            case routingAppCoverage
            case appStoreReviewDetail
            case appStoreVersionSubmission
            case appClipDefaultExperience
            case appStoreVersionExperiments
            case appStoreVersionExperimentsV2
            case customerReviews
            case alternativeDistributionPackage
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case app
            case gameCenterAppVersions
            case gameCenterGroup
            case gameCenterLeaderboards
            case gameCenterLeaderboardSets
            case gameCenterAchievements
            case gameCenterActivities
            case gameCenterChallenges
            case defaultLeaderboard
            case defaultGroupLeaderboard
            case achievementReleases
            case activityReleases
            case challengeReleases
            case leaderboardReleases
            case leaderboardSetReleases
            case challengesMinimumPlatformVersions
        }
    }
}
