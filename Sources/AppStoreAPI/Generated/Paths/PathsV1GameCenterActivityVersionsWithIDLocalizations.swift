// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.GameCenterActivityVersions.WithID {
    public var localizations: Localizations {
        Localizations(path: path + "/localizations")
    }

    public struct Localizations {
        /// Path: `/v1/gameCenterActivityVersions/{id}/localizations`
        public let path: String

        public func get(fieldsGameCenterActivityLocalizations: [FieldsGameCenterActivityLocalizations]? = nil, fieldsGameCenterActivityVersions: [FieldsGameCenterActivityVersions]? = nil, fieldsGameCenterActivityImages: [FieldsGameCenterActivityImages]? = nil, limit: Int? = nil, include: [Include]? = nil) -> Request<AppStoreAPI.GameCenterActivityLocalizationsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsGameCenterActivityLocalizations, fieldsGameCenterActivityVersions, fieldsGameCenterActivityImages, limit, include), id: "gameCenterActivityVersions_localizations_getToManyRelated")
        }

        private func makeGetQuery(_ fieldsGameCenterActivityLocalizations: [FieldsGameCenterActivityLocalizations]?, _ fieldsGameCenterActivityVersions: [FieldsGameCenterActivityVersions]?, _ fieldsGameCenterActivityImages: [FieldsGameCenterActivityImages]?, _ limit: Int?, _ include: [Include]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsGameCenterActivityLocalizations, forKey: "fields[gameCenterActivityLocalizations]")
            encoder.encode(fieldsGameCenterActivityVersions, forKey: "fields[gameCenterActivityVersions]")
            encoder.encode(fieldsGameCenterActivityImages, forKey: "fields[gameCenterActivityImages]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            return encoder.items
        }

        public enum FieldsGameCenterActivityLocalizations: String, CaseIterable, Codable, Sendable {
            case locale
            case name
            case description
            case version
            case image
        }

        public enum FieldsGameCenterActivityVersions: String, CaseIterable, Codable, Sendable {
            case version
            case state
            case fallbackURL = "fallbackUrl"
            case activity
            case localizations
            case defaultImage
            case releases
        }

        public enum FieldsGameCenterActivityImages: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case imageAsset
            case uploadOperations
            case assetDeliveryState
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case version
            case image
        }
    }
}
