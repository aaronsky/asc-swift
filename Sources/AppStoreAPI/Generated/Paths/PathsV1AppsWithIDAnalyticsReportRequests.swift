// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import URLQueryEncoder

extension Resources.V1.Apps.WithID {
    public var analyticsReportRequests: AnalyticsReportRequests {
        AnalyticsReportRequests(path: path + "/analyticsReportRequests")
    }

    public struct AnalyticsReportRequests {
        /// Path: `/v1/apps/{id}/analyticsReportRequests`
        public let path: String

        public func get(filterAccessType: [FilterAccessType]? = nil, fieldsAnalyticsReportRequests: [FieldsAnalyticsReportRequests]? = nil, fieldsAnalyticsReports: [FieldsAnalyticsReports]? = nil, limit: Int? = nil, limitReports: Int? = nil, include: [Include]? = nil) -> Request<AppStoreAPI.AnalyticsReportRequestsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(filterAccessType, fieldsAnalyticsReportRequests, fieldsAnalyticsReports, limit, limitReports, include), id: "apps-analyticsReportRequests-get_to_many_related")
        }

        private func makeGetQuery(_ filterAccessType: [FilterAccessType]?, _ fieldsAnalyticsReportRequests: [FieldsAnalyticsReportRequests]?, _ fieldsAnalyticsReports: [FieldsAnalyticsReports]?, _ limit: Int?, _ limitReports: Int?, _ include: [Include]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(filterAccessType, forKey: "filter[accessType]")
            encoder.encode(fieldsAnalyticsReportRequests, forKey: "fields[analyticsReportRequests]")
            encoder.encode(fieldsAnalyticsReports, forKey: "fields[analyticsReports]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(limitReports, forKey: "limit[reports]")
            encoder.encode(include, forKey: "include")
            return encoder.items
        }

        public enum FilterAccessType: String, CaseIterable, Codable, Sendable {
            case oneTimeSnapshot = "ONE_TIME_SNAPSHOT"
            case ongoing = "ONGOING"
        }

        public enum FieldsAnalyticsReportRequests: String, CaseIterable, Codable, Sendable {
            case accessType
            case app
            case reports
            case stoppedDueToInactivity
        }

        public enum FieldsAnalyticsReports: String, CaseIterable, Codable, Sendable {
            case category
            case instances
            case name
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case reports
        }
    }
}
