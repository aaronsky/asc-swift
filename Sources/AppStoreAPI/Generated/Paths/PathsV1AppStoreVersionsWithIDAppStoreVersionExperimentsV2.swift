// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.AppStoreVersions.WithID {
    public var appStoreVersionExperimentsV2: AppStoreVersionExperimentsV2 {
        AppStoreVersionExperimentsV2(path: path + "/appStoreVersionExperimentsV2")
    }

    public struct AppStoreVersionExperimentsV2 {
        /// Path: `/v1/appStoreVersions/{id}/appStoreVersionExperimentsV2`
        public let path: String

        public func get(filterState: [FilterState]? = nil, fieldsAppStoreVersionExperiments: [FieldsAppStoreVersionExperiments]? = nil, fieldsApps: [FieldsApps]? = nil, fieldsAppStoreVersions: [FieldsAppStoreVersions]? = nil, fieldsAppStoreVersionExperimentTreatments: [FieldsAppStoreVersionExperimentTreatments]? = nil, limit: Int? = nil, include: [Include]? = nil, limitControlVersions: Int? = nil, limitAppStoreVersionExperimentTreatments: Int? = nil) -> Request<AppStoreAPI.AppStoreVersionExperimentsV2Response> {
            Request(path: path, method: "GET", query: makeGetQuery(filterState, fieldsAppStoreVersionExperiments, fieldsApps, fieldsAppStoreVersions, fieldsAppStoreVersionExperimentTreatments, limit, include, limitControlVersions, limitAppStoreVersionExperimentTreatments), id: "appStoreVersions_appStoreVersionExperimentsV2_getToManyRelated")
        }

        private func makeGetQuery(_ filterState: [FilterState]?, _ fieldsAppStoreVersionExperiments: [FieldsAppStoreVersionExperiments]?, _ fieldsApps: [FieldsApps]?, _ fieldsAppStoreVersions: [FieldsAppStoreVersions]?, _ fieldsAppStoreVersionExperimentTreatments: [FieldsAppStoreVersionExperimentTreatments]?, _ limit: Int?, _ include: [Include]?, _ limitControlVersions: Int?, _ limitAppStoreVersionExperimentTreatments: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(filterState, forKey: "filter[state]")
            encoder.encode(fieldsAppStoreVersionExperiments, forKey: "fields[appStoreVersionExperiments]")
            encoder.encode(fieldsApps, forKey: "fields[apps]")
            encoder.encode(fieldsAppStoreVersions, forKey: "fields[appStoreVersions]")
            encoder.encode(fieldsAppStoreVersionExperimentTreatments, forKey: "fields[appStoreVersionExperimentTreatments]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitControlVersions, forKey: "limit[controlVersions]")
            encoder.encode(limitAppStoreVersionExperimentTreatments, forKey: "limit[appStoreVersionExperimentTreatments]")
            return encoder.items
        }

        public enum FilterState: String, CaseIterable, Codable, Sendable {
            case prepareForSubmission = "PREPARE_FOR_SUBMISSION"
            case readyForReview = "READY_FOR_REVIEW"
            case waitingForReview = "WAITING_FOR_REVIEW"
            case inReview = "IN_REVIEW"
            case accepted = "ACCEPTED"
            case approved = "APPROVED"
            case rejected = "REJECTED"
            case completed = "COMPLETED"
            case stopped = "STOPPED"
        }

        public enum FieldsAppStoreVersionExperiments: String, CaseIterable, Codable, Sendable {
            case name
            case platform
            case trafficProportion
            case state
            case reviewRequired
            case startDate
            case endDate
            case app
            case latestControlVersion
            case controlVersions
            case appStoreVersionExperimentTreatments
        }

        public enum FieldsApps: String, CaseIterable, Codable, Sendable {
            case accessibilityURL = "accessibilityUrl"
            case name
            case bundleID = "bundleId"
            case sku
            case primaryLocale
            case isOrEverWasMadeForKids
            case subscriptionStatusURL = "subscriptionStatusUrl"
            case subscriptionStatusURLVersion = "subscriptionStatusUrlVersion"
            case subscriptionStatusURLForSandbox = "subscriptionStatusUrlForSandbox"
            case subscriptionStatusURLVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
            case contentRightsDeclaration
            case streamlinedPurchasingEnabled
            case accessibilityDeclarations
            case appEncryptionDeclarations
            case ciProduct
            case betaTesters
            case betaGroups
            case appStoreVersions
            case preReleaseVersions
            case betaAppLocalizations
            case builds
            case betaLicenseAgreement
            case betaAppReviewDetail
            case appInfos
            case appClips
            case appPricePoints
            case endUserLicenseAgreement
            case appPriceSchedule
            case appAvailabilityV2
            case inAppPurchases
            case subscriptionGroups
            case gameCenterEnabledVersions
            case perfPowerMetrics
            case appCustomProductPages
            case inAppPurchasesV2
            case promotedPurchases
            case appEvents
            case reviewSubmissions
            case subscriptionGracePeriod
            case customerReviews
            case customerReviewSummarizations
            case gameCenterDetail
            case appStoreVersionExperimentsV2
            case alternativeDistributionKey
            case analyticsReportRequests
            case marketplaceSearchDetail
            case backgroundAssets
            case betaFeedbackScreenshotSubmissions
            case betaFeedbackCrashSubmissions
            case webhooks
        }

        public enum FieldsAppStoreVersions: String, CaseIterable, Codable, Sendable {
            case platform
            case versionString
            case appStoreState
            case appVersionState
            case copyright
            case reviewType
            case releaseType
            case earliestReleaseDate
            case usesIdfa
            case downloadable
            case createdDate
            case app
            case ageRatingDeclaration
            case appStoreVersionLocalizations
            case build
            case appStoreVersionPhasedRelease
            case gameCenterAppVersion
            case routingAppCoverage
            case appStoreReviewDetail
            case appStoreVersionSubmission
            case appClipDefaultExperience
            case appStoreVersionExperiments
            case appStoreVersionExperimentsV2
            case customerReviews
            case alternativeDistributionPackage
        }

        public enum FieldsAppStoreVersionExperimentTreatments: String, CaseIterable, Codable, Sendable {
            case name
            case appIcon
            case appIconName
            case promotedDate
            case appStoreVersionExperiment
            case appStoreVersionExperimentV2
            case appStoreVersionExperimentTreatmentLocalizations
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case app
            case latestControlVersion
            case controlVersions
            case appStoreVersionExperimentTreatments
        }
    }
}
