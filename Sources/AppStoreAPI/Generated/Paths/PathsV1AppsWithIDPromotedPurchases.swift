// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1.Apps.WithID {
    public var promotedPurchases: PromotedPurchases {
        PromotedPurchases(path: path + "/promotedPurchases")
    }

    public struct PromotedPurchases {
        /// Path: `/v1/apps/{id}/promotedPurchases`
        public let path: String

        public func get(fieldsPromotedPurchases: [FieldsPromotedPurchases]? = nil, fieldsInAppPurchases: [FieldsInAppPurchases]? = nil, fieldsSubscriptions: [FieldsSubscriptions]? = nil, fieldsPromotedPurchaseImages: [FieldsPromotedPurchaseImages]? = nil, limit: Int? = nil, include: [Include]? = nil, limitPromotionImages: Int? = nil) -> Request<AppStoreAPI.PromotedPurchasesResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsPromotedPurchases, fieldsInAppPurchases, fieldsSubscriptions, fieldsPromotedPurchaseImages, limit, include, limitPromotionImages), id: "apps_promotedPurchases_getToManyRelated")
        }

        private func makeGetQuery(_ fieldsPromotedPurchases: [FieldsPromotedPurchases]?, _ fieldsInAppPurchases: [FieldsInAppPurchases]?, _ fieldsSubscriptions: [FieldsSubscriptions]?, _ fieldsPromotedPurchaseImages: [FieldsPromotedPurchaseImages]?, _ limit: Int?, _ include: [Include]?, _ limitPromotionImages: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsPromotedPurchases, forKey: "fields[promotedPurchases]")
            encoder.encode(fieldsInAppPurchases, forKey: "fields[inAppPurchases]")
            encoder.encode(fieldsSubscriptions, forKey: "fields[subscriptions]")
            encoder.encode(fieldsPromotedPurchaseImages, forKey: "fields[promotedPurchaseImages]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            encoder.encode(limitPromotionImages, forKey: "limit[promotionImages]")
            return encoder.items
        }

        public enum FieldsPromotedPurchases: String, CaseIterable, Codable, Sendable {
            case visibleForAllUsers
            case enabled
            case state
            case app
            case inAppPurchaseV2
            case subscription
            case promotionImages
        }

        public enum FieldsInAppPurchases: String, CaseIterable, Codable, Sendable {
            case name
            case productID = "productId"
            case inAppPurchaseType
            case state
            case reviewNote
            case familySharable
            case contentHosting
            case app
            case inAppPurchaseLocalizations
            case pricePoints
            case content
            case appStoreReviewScreenshot
            case promotedPurchase
            case iapPriceSchedule
            case inAppPurchaseAvailability
            case images
        }

        public enum FieldsSubscriptions: String, CaseIterable, Codable, Sendable {
            case name
            case productID = "productId"
            case familySharable
            case state
            case subscriptionPeriod
            case reviewNote
            case groupLevel
            case subscriptionLocalizations
            case appStoreReviewScreenshot
            case group
            case introductoryOffers
            case promotionalOffers
            case offerCodes
            case prices
            case pricePoints
            case promotedPurchase
            case subscriptionAvailability
            case winBackOffers
            case images
        }

        public enum FieldsPromotedPurchaseImages: String, CaseIterable, Codable, Sendable {
            case fileSize
            case fileName
            case sourceFileChecksum
            case assetToken
            case imageAsset
            case assetType
            case uploadOperations
            case uploaded
            case state
            case promotedPurchase
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case inAppPurchaseV2
            case subscription
            case promotionImages
        }
    }
}
