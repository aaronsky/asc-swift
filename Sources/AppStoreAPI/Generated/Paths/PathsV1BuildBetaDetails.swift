// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources.V1 {
    public var buildBetaDetails: BuildBetaDetails {
        BuildBetaDetails(path: path + "/buildBetaDetails")
    }

    public struct BuildBetaDetails {
        /// Path: `/v1/buildBetaDetails`
        public let path: String

        public func get(filterBuild: [String]? = nil, filterID: [String]? = nil, fieldsBuildBetaDetails: [FieldsBuildBetaDetails]? = nil, fieldsBuilds: [FieldsBuilds]? = nil, limit: Int? = nil, include: [Include]? = nil) -> Request<AppStoreAPI.BuildBetaDetailsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(filterBuild, filterID, fieldsBuildBetaDetails, fieldsBuilds, limit, include), id: "buildBetaDetails_getCollection")
        }

        private func makeGetQuery(_ filterBuild: [String]?, _ filterID: [String]?, _ fieldsBuildBetaDetails: [FieldsBuildBetaDetails]?, _ fieldsBuilds: [FieldsBuilds]?, _ limit: Int?, _ include: [Include]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(filterBuild, forKey: "filter[build]")
            encoder.encode(filterID, forKey: "filter[id]")
            encoder.encode(fieldsBuildBetaDetails, forKey: "fields[buildBetaDetails]")
            encoder.encode(fieldsBuilds, forKey: "fields[builds]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            return encoder.items
        }

        public enum FieldsBuildBetaDetails: String, CaseIterable, Codable, Sendable {
            case autoNotifyEnabled
            case internalBuildState
            case externalBuildState
            case build
        }

        public enum FieldsBuilds: String, CaseIterable, Codable, Sendable {
            case version
            case uploadedDate
            case expirationDate
            case expired
            case minOsVersion
            case lsMinimumSystemVersion
            case computedMinMacOsVersion
            case iconAssetToken
            case processingState
            case buildAudienceType
            case usesNonExemptEncryption
            case preReleaseVersion
            case individualTesters
            case betaGroups
            case betaBuildLocalizations
            case appEncryptionDeclaration
            case betaAppReviewSubmission
            case app
            case buildBetaDetail
            case appStoreVersion
            case icons
            case buildBundles
            case perfPowerMetrics
            case diagnosticSignatures
        }

        public enum Include: String, CaseIterable, Codable, Sendable {
            case build
        }
    }
}
