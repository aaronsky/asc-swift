// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import URLQueryEncoder

extension Resources.V1.SubscriptionGracePeriods {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v1/subscriptionGracePeriods/{id}`
        public let path: String

        public func get(fieldsSubscriptionGracePeriods: [FieldsSubscriptionGracePeriods]? = nil) -> Request<_Specification.SubscriptionGracePeriodResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsSubscriptionGracePeriods), id: "subscriptionGracePeriods-get_instance")
        }

        private func makeGetQuery(_ fieldsSubscriptionGracePeriods: [FieldsSubscriptionGracePeriods]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(fieldsSubscriptionGracePeriods, forKey: "fields[subscriptionGracePeriods]", explode: false)
            return encoder.items
        }

        public enum FieldsSubscriptionGracePeriods: String, Codable, CaseIterable {
            case duration
            case optIn
            case renewalType
            case sandboxOptIn
        }

        public func patch(_ body: _Specification.SubscriptionGracePeriodUpdateRequest) -> Request<_Specification.SubscriptionGracePeriodResponse> {
            Request(path: path, method: "PATCH", body: body, id: "subscriptionGracePeriods-update_instance")
        }
    }
}
