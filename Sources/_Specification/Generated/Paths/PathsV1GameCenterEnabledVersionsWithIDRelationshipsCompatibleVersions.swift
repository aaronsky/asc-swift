// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import URLQueryEncoder

extension Resources.V1.GameCenterEnabledVersions.WithID.Relationships {
    public var compatibleVersions: CompatibleVersions {
        CompatibleVersions(path: path + "/compatibleVersions")
    }

    public struct CompatibleVersions {
        /// Path: `/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions`
        public let path: String

        public func get(limit: Int? = nil) -> Request<_Specification.GameCenterEnabledVersionCompatibleVersionsLinkagesResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(limit), id: "gameCenterEnabledVersions-compatibleVersions-get_to_many_relationship")
        }

        private func makeGetQuery(_ limit: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(limit, forKey: "limit")
            return encoder.items
        }

        public func post(_ body: _Specification.GameCenterEnabledVersionCompatibleVersionsLinkagesRequest) -> Request<Void> {
            Request(path: path, method: "POST", body: body, id: "gameCenterEnabledVersions-compatibleVersions-create_to_many_relationship")
        }

        public func patch(_ body: _Specification.GameCenterEnabledVersionCompatibleVersionsLinkagesRequest) -> Request<Void> {
            Request(path: path, method: "PATCH", body: body, id: "gameCenterEnabledVersions-compatibleVersions-replace_to_many_relationship")
        }

        public func delete(_ body: _Specification.GameCenterEnabledVersionCompatibleVersionsLinkagesRequest) -> Request<Void> {
            Request(path: path, method: "DELETE", body: body, id: "gameCenterEnabledVersions-compatibleVersions-delete_to_many_relationship")
        }
    }
}
