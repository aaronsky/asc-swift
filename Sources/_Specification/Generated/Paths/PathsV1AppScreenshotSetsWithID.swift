// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import URLQueryEncoder

extension Resources.V1.AppScreenshotSets {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v1/appScreenshotSets/{id}`
        public let path: String

        public func get(fieldsAppScreenshotSets: [FieldsAppScreenshotSets]? = nil, include: [Include]? = nil, fieldsAppScreenshots: [FieldsAppScreenshots]? = nil, limitAppScreenshots: Int? = nil) -> Request<_Specification.AppScreenshotSetResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsAppScreenshotSets, include, fieldsAppScreenshots, limitAppScreenshots), id: "appScreenshotSets-get_instance")
        }

        private func makeGetQuery(_ fieldsAppScreenshotSets: [FieldsAppScreenshotSets]?, _ include: [Include]?, _ fieldsAppScreenshots: [FieldsAppScreenshots]?, _ limitAppScreenshots: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsAppScreenshotSets, forKey: "fields[appScreenshotSets]")
            encoder.encode(include, forKey: "include")
            encoder.encode(fieldsAppScreenshots, forKey: "fields[appScreenshots]")
            encoder.encode(limitAppScreenshots, forKey: "limit[appScreenshots]")
            return encoder.items
        }

        public enum FieldsAppScreenshotSets: String, Codable, CaseIterable {
            case appCustomProductPageLocalization
            case appScreenshots
            case appStoreVersionExperimentTreatmentLocalization
            case appStoreVersionLocalization
            case screenshotDisplayType
        }

        public enum Include: String, Codable, CaseIterable {
            case appCustomProductPageLocalization
            case appScreenshots
            case appStoreVersionExperimentTreatmentLocalization
            case appStoreVersionLocalization
        }

        public enum FieldsAppScreenshots: String, Codable, CaseIterable {
            case appScreenshotSet
            case assetDeliveryState
            case assetToken
            case assetType
            case fileName
            case fileSize
            case imageAsset
            case sourceFileChecksum
            case uploadOperations
            case uploaded
        }

        public var delete: Request<Void> {
            Request(path: path, method: "DELETE", id: "appScreenshotSets-delete_instance")
        }
    }
}
