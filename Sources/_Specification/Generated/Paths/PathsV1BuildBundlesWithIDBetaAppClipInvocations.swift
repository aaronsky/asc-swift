// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import URLQueryEncoder

extension Resources.V1.BuildBundles.WithID {
    public var betaAppClipInvocations: BetaAppClipInvocations {
        BetaAppClipInvocations(path: path + "/betaAppClipInvocations")
    }

    public struct BetaAppClipInvocations {
        /// Path: `/v1/buildBundles/{id}/betaAppClipInvocations`
        public let path: String

        public func get(fieldsBetaAppClipInvocations: [FieldsBetaAppClipInvocations]? = nil, fieldsBetaAppClipInvocationLocalizations: [FieldsBetaAppClipInvocationLocalizations]? = nil, limit: Int? = nil, limitBetaAppClipInvocationLocalizations: Int? = nil, include: [Include]? = nil) -> Request<_Specification.BetaAppClipInvocationsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsBetaAppClipInvocations, fieldsBetaAppClipInvocationLocalizations, limit, limitBetaAppClipInvocationLocalizations, include), id: "buildBundles-betaAppClipInvocations-get_to_many_related")
        }

        private func makeGetQuery(_ fieldsBetaAppClipInvocations: [FieldsBetaAppClipInvocations]?, _ fieldsBetaAppClipInvocationLocalizations: [FieldsBetaAppClipInvocationLocalizations]?, _ limit: Int?, _ limitBetaAppClipInvocationLocalizations: Int?, _ include: [Include]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsBetaAppClipInvocations, forKey: "fields[betaAppClipInvocations]")
            encoder.encode(fieldsBetaAppClipInvocationLocalizations, forKey: "fields[betaAppClipInvocationLocalizations]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(limitBetaAppClipInvocationLocalizations, forKey: "limit[betaAppClipInvocationLocalizations]")
            encoder.encode(include, forKey: "include")
            return encoder.items
        }

        public enum FieldsBetaAppClipInvocations: String, Codable, CaseIterable {
            case betaAppClipInvocationLocalizations
            case buildBundle
            case url
        }

        public enum FieldsBetaAppClipInvocationLocalizations: String, Codable, CaseIterable {
            case betaAppClipInvocation
            case locale
            case title
        }

        public enum Include: String, Codable, CaseIterable {
            case betaAppClipInvocationLocalizations
        }
    }
}
