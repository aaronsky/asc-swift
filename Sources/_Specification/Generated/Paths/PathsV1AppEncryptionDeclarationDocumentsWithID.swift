// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import URLQueryEncoder

extension Resources.V1.AppEncryptionDeclarationDocuments {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v1/appEncryptionDeclarationDocuments/{id}`
        public let path: String

        public func get(fieldsAppEncryptionDeclarationDocuments: [FieldsAppEncryptionDeclarationDocuments]? = nil) -> Request<_Specification.AppEncryptionDeclarationDocumentResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsAppEncryptionDeclarationDocuments), id: "appEncryptionDeclarationDocuments-get_instance")
        }

        private func makeGetQuery(_ fieldsAppEncryptionDeclarationDocuments: [FieldsAppEncryptionDeclarationDocuments]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(fieldsAppEncryptionDeclarationDocuments, forKey: "fields[appEncryptionDeclarationDocuments]", explode: false)
            return encoder.items
        }

        public enum FieldsAppEncryptionDeclarationDocuments: String, Codable, CaseIterable {
            case appEncryptionDeclaration
            case assetDeliveryState
            case assetToken
            case downloadURL = "downloadUrl"
            case fileName
            case fileSize
            case sourceFileChecksum
            case uploadOperations
            case uploaded
        }

        public func patch(_ body: _Specification.AppEncryptionDeclarationDocumentUpdateRequest) -> Request<_Specification.AppEncryptionDeclarationDocumentResponse> {
            Request(path: path, method: "PATCH", body: body, id: "appEncryptionDeclarationDocuments-update_instance")
        }
    }
}
