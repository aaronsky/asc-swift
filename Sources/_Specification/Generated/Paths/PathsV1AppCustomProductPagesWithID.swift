// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import URLQueryEncoder

extension Resources.V1.AppCustomProductPages {
    public func id(_ id: String) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/v1/appCustomProductPages/{id}`
        public let path: String

        public func get(fieldsAppCustomProductPages: [FieldsAppCustomProductPages]? = nil, include: [Include]? = nil, fieldsAppCustomProductPageVersions: [FieldsAppCustomProductPageVersions]? = nil, limitAppCustomProductPageVersions: Int? = nil) -> Request<_Specification.AppCustomProductPageResponse> {
            Request(method: "GET", url: path, query: makeGetQuery(fieldsAppCustomProductPages, include, fieldsAppCustomProductPageVersions, limitAppCustomProductPageVersions), id: "appCustomProductPages-get_instance")
        }

        private func makeGetQuery(_ fieldsAppCustomProductPages: [FieldsAppCustomProductPages]?, _ include: [Include]?, _ fieldsAppCustomProductPageVersions: [FieldsAppCustomProductPageVersions]?, _ limitAppCustomProductPageVersions: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsAppCustomProductPages, forKey: "fields[appCustomProductPages]")
            encoder.encode(include, forKey: "include")
            encoder.encode(fieldsAppCustomProductPageVersions, forKey: "fields[appCustomProductPageVersions]")
            encoder.encode(limitAppCustomProductPageVersions, forKey: "limit[appCustomProductPageVersions]")
            return encoder.items
        }

        public enum FieldsAppCustomProductPages: String, Codable, CaseIterable {
            case app
            case appCustomProductPageVersions
            case appStoreVersionTemplate
            case customProductPageTemplate
            case name
            case url
            case visible
        }

        public enum Include: String, Codable, CaseIterable {
            case app
            case appCustomProductPageVersions
        }

        public enum FieldsAppCustomProductPageVersions: String, Codable, CaseIterable {
            case appCustomProductPage
            case appCustomProductPageLocalizations
            case state
            case version
        }

        public func patch(_ body: _Specification.AppCustomProductPageUpdateRequest) -> Request<_Specification.AppCustomProductPageResponse> {
            Request(method: "PATCH", url: path, body: body, id: "appCustomProductPages-update_instance")
        }

        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "appCustomProductPages-delete_instance")
        }
    }
}
