// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import URLQueryEncoder

extension Resources.V1.CiBuildRuns.WithID {
    public var actions: Actions {
        Actions(path: path + "/actions")
    }

    public struct Actions {
        /// Path: `/v1/ciBuildRuns/{id}/actions`
        public let path: String

        public func get(fieldsCiBuildRuns: [FieldsCiBuildRuns]? = nil, fieldsCiBuildActions: [FieldsCiBuildActions]? = nil, limit: Int? = nil, include: [Include]? = nil) -> Request<_Specification.CiBuildActionsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(fieldsCiBuildRuns, fieldsCiBuildActions, limit, include), id: "ciBuildRuns-actions-get_to_many_related")
        }

        private func makeGetQuery(_ fieldsCiBuildRuns: [FieldsCiBuildRuns]?, _ fieldsCiBuildActions: [FieldsCiBuildActions]?, _ limit: Int?, _ include: [Include]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(fieldsCiBuildRuns, forKey: "fields[ciBuildRuns]")
            encoder.encode(fieldsCiBuildActions, forKey: "fields[ciBuildActions]")
            encoder.encode(limit, forKey: "limit")
            encoder.encode(include, forKey: "include")
            return encoder.items
        }

        public enum FieldsCiBuildRuns: String, Codable, CaseIterable {
            case actions
            case buildRun
            case builds
            case cancelReason
            case clean
            case completionStatus
            case createdDate
            case destinationBranch
            case destinationCommit
            case executionProgress
            case finishedDate
            case isPullRequestBuild
            case issueCounts
            case number
            case product
            case pullRequest
            case sourceBranchOrTag
            case sourceCommit
            case startReason
            case startedDate
            case workflow
        }

        public enum FieldsCiBuildActions: String, Codable, CaseIterable {
            case actionType
            case artifacts
            case buildRun
            case completionStatus
            case executionProgress
            case finishedDate
            case isRequiredToPass
            case issueCounts
            case issues
            case name
            case startedDate
            case testResults
        }

        public enum Include: String, Codable, CaseIterable {
            case buildRun
        }
    }
}
