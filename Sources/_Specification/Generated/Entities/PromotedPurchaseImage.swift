// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation

public struct PromotedPurchaseImage: Codable, Hashable, Identifiable {
    public var type: `Type`
    public var id: String
    public var attributes: Attributes?
    public var relationships: Relationships?
    public var links: ResourceLinks?

    public enum `Type`: String, Codable, CaseIterable {
        case promotedPurchaseImages
    }

    public struct Attributes: Codable, Hashable {
        public var fileSize: Int?
        public var fileName: String?
        public var sourceFileChecksum: String?
        public var assetToken: String?
        public var imageAsset: ImageAsset?
        public var assetType: String?
        public var uploadOperations: [UploadOperation]?
        public var state: State?

        public enum State: String, Codable, CaseIterable {
            case awaitingUpload = "AWAITING_UPLOAD"
            case uploadComplete = "UPLOAD_COMPLETE"
            case failed = "FAILED"
            case prepareForSubmission = "PREPARE_FOR_SUBMISSION"
            case waitingForReview = "WAITING_FOR_REVIEW"
            case approved = "APPROVED"
            case rejected = "REJECTED"
        }

        public init(fileSize: Int? = nil, fileName: String? = nil, sourceFileChecksum: String? = nil, assetToken: String? = nil, imageAsset: ImageAsset? = nil, assetType: String? = nil, uploadOperations: [UploadOperation]? = nil, state: State? = nil) {
            self.fileSize = fileSize
            self.fileName = fileName
            self.sourceFileChecksum = sourceFileChecksum
            self.assetToken = assetToken
            self.imageAsset = imageAsset
            self.assetType = assetType
            self.uploadOperations = uploadOperations
            self.state = state
        }
    }

    public struct Relationships: Codable, Hashable {
        public var promotedPurchase: PromotedPurchase?

        public struct PromotedPurchase: Codable, Hashable {
            public var links: Links?
            public var data: Data?

            public struct Links: Codable, Hashable {
                public var this: URL?
                public var related: URL?

                public init(this: URL? = nil, related: URL? = nil) {
                    self.this = this
                    self.related = related
                }

                private enum CodingKeys: String, CodingKey {
                    case this = "self"
                    case related
                }
            }

            public struct Data: Codable, Hashable, Identifiable {
                public var type: `Type`
                public var id: String

                public enum `Type`: String, Codable, CaseIterable {
                    case promotedPurchases
                }

                public init(type: `Type`, id: String) {
                    self.type = type
                    self.id = id
                }
            }

            public init(links: Links? = nil, data: Data? = nil) {
                self.links = links
                self.data = data
            }
        }

        public init(promotedPurchase: PromotedPurchase? = nil) {
            self.promotedPurchase = promotedPurchase
        }
    }

    public init(type: `Type`, id: String, attributes: Attributes? = nil, relationships: Relationships? = nil, links: ResourceLinks? = nil) {
        self.type = type
        self.id = id
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }
}
