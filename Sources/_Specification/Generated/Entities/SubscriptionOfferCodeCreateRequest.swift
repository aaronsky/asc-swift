// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation

public struct SubscriptionOfferCodeCreateRequest: Codable, Equatable {
    public var data: Data
    public var included: [SubscriptionOfferCodePriceInlineCreate]?

    public struct Data: Codable, Equatable {
        public var type: `Type`
        public var attributes: Attributes
        public var relationships: Relationships

        public enum `Type`: String, Codable, CaseIterable {
            case subscriptionOfferCodes
        }

        public struct Attributes: Codable, Equatable {
            public var name: String
            public var customerEligibilities: [SubscriptionCustomerEligibility]
            public var offerEligibility: SubscriptionOfferEligibility
            public var duration: SubscriptionOfferDuration
            public var offerMode: SubscriptionOfferMode
            public var numberOfPeriods: Int

            public init(name: String, customerEligibilities: [SubscriptionCustomerEligibility], offerEligibility: SubscriptionOfferEligibility, duration: SubscriptionOfferDuration, offerMode: SubscriptionOfferMode, numberOfPeriods: Int) {
                self.name = name
                self.customerEligibilities = customerEligibilities
                self.offerEligibility = offerEligibility
                self.duration = duration
                self.offerMode = offerMode
                self.numberOfPeriods = numberOfPeriods
            }
        }

        public struct Relationships: Codable, Equatable {
            public var subscription: Subscription
            public var prices: Prices

            public struct Subscription: Codable, Equatable {
                public var data: Data

                public struct Data: Codable, Equatable, Identifiable {
                    public var type: `Type`
                    public var id: String

                    public enum `Type`: String, Codable, CaseIterable {
                        case subscriptions
                    }

                    public init(type: `Type`, id: String) {
                        self.type = type
                        self.id = id
                    }
                }

                public init(data: Data) {
                    self.data = data
                }
            }

            public struct Prices: Codable, Equatable {
                public var data: [Datum]

                public struct Datum: Codable, Equatable, Identifiable {
                    public var type: `Type`
                    public var id: String

                    public enum `Type`: String, Codable, CaseIterable {
                        case subscriptionOfferCodePrices
                    }

                    public init(type: `Type`, id: String) {
                        self.type = type
                        self.id = id
                    }
                }

                public init(data: [Datum]) {
                    self.data = data
                }
            }

            public init(subscription: Subscription, prices: Prices) {
                self.subscription = subscription
                self.prices = prices
            }
        }

        public init(type: `Type`, attributes: Attributes, relationships: Relationships) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }
    }

    public init(data: Data, included: [SubscriptionOfferCodePriceInlineCreate]? = nil) {
        self.data = data
        self.included = included
    }
}
