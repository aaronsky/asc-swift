// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation

public struct SandboxTesterV2UpdateRequest: Codable, Equatable, Sendable {
    public var data: Data

    public struct Data: Codable, Equatable, Identifiable, Sendable {
        public var type: `Type`
        public var id: String
        public var attributes: Attributes?

        public enum `Type`: String, CaseIterable, Codable, Sendable {
            case sandboxTesters
        }

        public struct Attributes: Codable, Equatable, Sendable {
            public var territory: TerritoryCode?
            public var isInterruptPurchases: Bool?
            public var subscriptionRenewalRate: SubscriptionRenewalRate?

            public enum SubscriptionRenewalRate: String, CaseIterable, Codable, Sendable {
                case monthlyRenewalEveryOneHour = "MONTHLY_RENEWAL_EVERY_ONE_HOUR"
                case monthlyRenewalEveryThirtyMinutes = "MONTHLY_RENEWAL_EVERY_THIRTY_MINUTES"
                case monthlyRenewalEveryFifteenMinutes = "MONTHLY_RENEWAL_EVERY_FIFTEEN_MINUTES"
                case monthlyRenewalEveryFiveMinutes = "MONTHLY_RENEWAL_EVERY_FIVE_MINUTES"
                case monthlyRenewalEveryThreeMinutes = "MONTHLY_RENEWAL_EVERY_THREE_MINUTES"
            }

            public init(territory: TerritoryCode? = nil, isInterruptPurchases: Bool? = nil, subscriptionRenewalRate: SubscriptionRenewalRate? = nil) {
                self.territory = territory
                self.isInterruptPurchases = isInterruptPurchases
                self.subscriptionRenewalRate = subscriptionRenewalRate
            }

            private enum CodingKeys: String, CodingKey {
                case territory
                case isInterruptPurchases = "interruptPurchases"
                case subscriptionRenewalRate
            }
        }

        public init(type: `Type` = .sandboxTesters, id: String, attributes: Attributes? = nil) {
            self.type = type
            self.id = id
            self.attributes = attributes
        }
    }

    public init(data: Data) {
        self.data = data
    }
}
