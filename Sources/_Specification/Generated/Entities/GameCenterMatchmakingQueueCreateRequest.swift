// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation

public struct GameCenterMatchmakingQueueCreateRequest: Codable, Equatable {
    public var data: Data

    public struct Data: Codable, Equatable {
        public var type: `Type`
        public var attributes: Attributes
        public var relationships: Relationships

        public enum `Type`: String, Codable, CaseIterable {
            case gameCenterMatchmakingQueues
        }

        public struct Attributes: Codable, Equatable {
            public var referenceName: String
            public var classicMatchmakingBundleIDs: [String]?

            public init(referenceName: String, classicMatchmakingBundleIDs: [String]? = nil) {
                self.referenceName = referenceName
                self.classicMatchmakingBundleIDs = classicMatchmakingBundleIDs
            }

            private enum CodingKeys: String, CodingKey {
                case referenceName
                case classicMatchmakingBundleIDs = "classicMatchmakingBundleIds"
            }
        }

        public struct Relationships: Codable, Equatable {
            public var ruleSet: RuleSet
            public var experimentRuleSet: ExperimentRuleSet?

            public struct RuleSet: Codable, Equatable {
                public var data: Data

                public struct Data: Codable, Equatable, Identifiable {
                    public var type: `Type`
                    public var id: String

                    public enum `Type`: String, Codable, CaseIterable {
                        case gameCenterMatchmakingRuleSets
                    }

                    public init(type: `Type`, id: String) {
                        self.type = type
                        self.id = id
                    }
                }

                public init(data: Data) {
                    self.data = data
                }
            }

            public struct ExperimentRuleSet: Codable, Equatable {
                public var data: Data?

                public struct Data: Codable, Equatable, Identifiable {
                    public var type: `Type`
                    public var id: String

                    public enum `Type`: String, Codable, CaseIterable {
                        case gameCenterMatchmakingRuleSets
                    }

                    public init(type: `Type`, id: String) {
                        self.type = type
                        self.id = id
                    }
                }

                public init(data: Data? = nil) {
                    self.data = data
                }
            }

            public init(ruleSet: RuleSet, experimentRuleSet: ExperimentRuleSet? = nil) {
                self.ruleSet = ruleSet
                self.experimentRuleSet = experimentRuleSet
            }
        }

        public init(type: `Type`, attributes: Attributes, relationships: Relationships) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }
    }

    public init(data: Data) {
        self.data = data
    }
}
