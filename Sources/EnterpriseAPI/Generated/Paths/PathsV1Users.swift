// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation
import AppStoreConnect
import URLQueryEncoder

extension Resources {
    public static var users: Users {
        Users(path: "/v1/users")
    }

    public struct Users {
        /// Path: `/v1/users`
        public let path: String

        /// List Users
        public func get(filterRoles: [FilterRoles]? = nil, filterUsername: [String]? = nil, sort: [Sort]? = nil, fieldsUsers: [FieldsUsers]? = nil, limit: Int? = nil) -> Request<EnterpriseAPI.UsersResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(filterRoles, filterUsername, sort, fieldsUsers, limit), id: "users-get_collection")
        }

        private func makeGetQuery(_ filterRoles: [FilterRoles]?, _ filterUsername: [String]?, _ sort: [Sort]?, _ fieldsUsers: [FieldsUsers]?, _ limit: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder(explode: false)
            encoder.encode(filterRoles, forKey: "filter[roles]")
            encoder.encode(filterUsername, forKey: "filter[username]")
            encoder.encode(sort, forKey: "sort")
            encoder.encode(fieldsUsers, forKey: "fields[users]")
            encoder.encode(limit, forKey: "limit")
            return encoder.items
        }

        public enum FilterRoles: String, CaseIterable, Codable, Sendable {
            case admin = "ADMIN"
            case accountHolder = "ACCOUNT_HOLDER"
            case developer = "DEVELOPER"
        }

        public enum Sort: String, CaseIterable, Codable, Sendable {
            case lastName
            case minusLastName = "-lastName"
            case username
            case minusUsername = "-username"
        }

        public enum FieldsUsers: String, CaseIterable, Codable, Sendable {
            case firstName
            case lastName
            case roles
            case username
        }
    }
}
