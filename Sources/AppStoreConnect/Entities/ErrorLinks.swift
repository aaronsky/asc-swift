// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swift-format-ignore-file

import Foundation

public struct ErrorLinks: Codable, Equatable, Sendable {
    public var about: URL?
    public var associated: Associated?

    public enum Associated: Codable, Equatable, Sendable {
        case url(URL)
        case object(Object)

        public struct Object: Codable, Equatable, Sendable {
            public var href: URL?
            public var meta: Meta?

            public struct Meta: Codable, Equatable, Sendable {
                public var source: String?

                public init(source: String? = nil) {
                    self.source = source
                }
            }

            public init(href: URL? = nil, meta: Meta? = nil) {
                self.href = href
                self.meta = meta
            }
        }

        public init(from decoder: any Decoder) throws {
            let container = try decoder.singleValueContainer()
            if let value = try? container.decode(URL.self) {
                self = .url(value)
            } else if let value = try? container.decode(Object.self) {
                self = .object(value)
            } else {
                throw DecodingError.dataCorruptedError(
                    in: container,
                    debugDescription: "Data could not be decoded as any of the expected types (URL, Object)."
                )
            }
        }

        public func encode(to encoder: any Encoder) throws {
            var container = encoder.singleValueContainer()
            switch self {
            case .url(let value): try container.encode(value)
            case .object(let value): try container.encode(value)
            }
        }
    }

    public init(about: URL? = nil, associated: Associated? = nil) {
        self.about = about
        self.associated = associated
    }
}
